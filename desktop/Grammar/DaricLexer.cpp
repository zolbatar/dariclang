
// Generated from Daric.g4 by ANTLR 4.11.1


#include "DaricLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct DaricLexerStaticData final {
  DaricLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  DaricLexerStaticData(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData(DaricLexerStaticData&&) = delete;
  DaricLexerStaticData& operator=(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData& operator=(DaricLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag dariclexerLexerOnceFlag;
DaricLexerStaticData *dariclexerLexerStaticData = nullptr;

void dariclexerLexerInitialize() {
  assert(dariclexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<DaricLexerStaticData>(
    std::vector<std::string>{
      "COMMENT", "CONST", "DEF", "DIM", "ELSE", "END", "ENDDEF", "ENDIF", 
      "ENDWHILE", "FOR", "IF", "MODULE", "NEXT", "OF", "PRINT", "PRIVATE", 
      "REM", "REPEAT", "RETURN", "THEN", "STEP", "SWAP", "TO", "UNTIL", 
      "WITH", "WHILE", "DEFRECORD", "RECORD", "ENDRECORD", "HPTIME", "TIME", 
      "TIMES", "ABS", "ACS", "ASN", "ATN", "COS", "DEG", "EXP", "FLOOR", 
      "LET", "LN", "LOG", "PI", "RAD", "ROUND", "SGN", "SIN", "SQR", "TAN", 
      "FALSE", "TRUE", "ASC", "CHRS", "INSTR", "LEFTS", "MIDS", "RIGHTS", 
      "LEN", "BYTE", "INT", "FLOAT", "STRING", "DOLLAR", "HASH", "COLON", 
      "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", "PERCENT", "UNDERSCORE", 
      "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", "NE", "GT", "GE", "LT", 
      "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "SHL", "SHR", 
      "MOD", "DIV", "COMP", "NOT", "AND", "OR", "EOR", "STRINGLITERAL", 
      "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", "INTEGERLITERAL", "IDENTIFIER", 
      "HEX", "NAME", "ALPHA", "DIGIT", "WS"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "'$'", "'#'", 
      "':'", "';'", "'.'", "','", "'''", "", "'%'", "'_'", "'('", "')'", 
      "'['", "']'", "'='", "'<>'", "'>'", "'>='", "'<'", "'<='", "'^'", 
      "'+'", "'-'", "'*'", "'/'", "'<<'", "'>>'", "", "", "'~'"
    },
    std::vector<std::string>{
      "", "COMMENT", "CONST", "DEF", "DIM", "ELSE", "END", "ENDDEF", "ENDIF", 
      "ENDWHILE", "FOR", "IF", "MODULE", "NEXT", "OF", "PRINT", "PRIVATE", 
      "REM", "REPEAT", "RETURN", "THEN", "STEP", "SWAP", "TO", "UNTIL", 
      "WITH", "WHILE", "DEFRECORD", "RECORD", "ENDRECORD", "HPTIME", "TIME", 
      "TIMES", "ABS", "ACS", "ASN", "ATN", "COS", "DEG", "EXP", "FLOOR", 
      "LET", "LN", "LOG", "PI", "RAD", "ROUND", "SGN", "SIN", "SQR", "TAN", 
      "FALSE", "TRUE", "ASC", "CHRS", "INSTR", "LEFTS", "MIDS", "RIGHTS", 
      "LEN", "BYTE", "INT", "FLOAT", "STRING", "DOLLAR", "HASH", "COLON", 
      "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", "PERCENT", "UNDERSCORE", 
      "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", "NE", "GT", "GE", "LT", 
      "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "SHL", "SHR", 
      "MOD", "DIV", "COMP", "NOT", "AND", "OR", "EOR", "STRINGLITERAL", 
      "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", "INTEGERLITERAL", "IDENTIFIER", 
      "WS"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,104,1064,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,1,0,1,0,1,0,3,0,221,8,0,1,0,
  	5,0,224,8,0,10,0,12,0,227,9,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
  	3,1,239,8,1,1,2,1,2,1,2,1,2,1,2,1,2,3,2,247,8,2,1,3,1,3,1,3,1,3,1,3,1,
  	3,3,3,255,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,265,8,4,1,5,1,5,1,5,
  	1,5,1,5,1,5,3,5,273,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
  	6,3,6,287,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,299,8,7,1,8,
  	1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,317,8,
  	8,1,9,1,9,1,9,1,9,1,9,1,9,3,9,325,8,9,1,10,1,10,1,10,1,10,3,10,331,8,
  	10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,345,
  	8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,355,8,12,1,13,1,13,
  	1,13,1,13,3,13,361,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
  	1,14,3,14,373,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
  	1,15,1,15,1,15,1,15,3,15,389,8,15,1,16,1,16,1,16,1,16,1,16,1,16,3,16,
  	397,8,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
  	3,17,411,8,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
  	1,18,3,18,425,8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,435,8,
  	19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,445,8,20,1,21,1,21,1,
  	21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,456,8,21,1,22,1,22,1,22,1,22,3,
  	22,462,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,474,
  	8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,484,8,24,1,25,1,25,
  	1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,496,8,25,1,26,1,26,1,26,
  	1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
  	1,26,3,26,516,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
  	1,27,1,27,3,27,530,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
  	1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,550,8,28,1,29,1,29,
  	1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,564,8,29,1,30,
  	1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,574,8,30,1,31,1,31,1,31,1,31,
  	1,31,1,31,1,31,1,31,1,31,1,31,3,31,586,8,31,1,32,1,32,1,32,1,32,1,32,
  	1,32,3,32,594,8,32,1,33,1,33,1,33,1,33,1,33,1,33,3,33,602,8,33,1,34,1,
  	34,1,34,1,34,1,34,1,34,3,34,610,8,34,1,35,1,35,1,35,1,35,1,35,1,35,3,
  	35,618,8,35,1,36,1,36,1,36,1,36,1,36,1,36,3,36,626,8,36,1,37,1,37,1,37,
  	1,37,1,37,1,37,3,37,634,8,37,1,38,1,38,1,38,1,38,1,38,1,38,3,38,642,8,
  	38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,3,39,654,8,39,1,
  	40,1,40,1,40,1,40,1,40,1,40,3,40,662,8,40,1,41,1,41,1,41,1,41,3,41,668,
  	8,41,1,42,1,42,1,42,1,42,1,42,1,42,3,42,676,8,42,1,43,1,43,1,43,1,43,
  	3,43,682,8,43,1,44,1,44,1,44,1,44,1,44,1,44,3,44,690,8,44,1,45,1,45,1,
  	45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,702,8,45,1,46,1,46,1,46,1,
  	46,1,46,1,46,3,46,710,8,46,1,47,1,47,1,47,1,47,1,47,1,47,3,47,718,8,47,
  	1,48,1,48,1,48,1,48,1,48,1,48,3,48,726,8,48,1,49,1,49,1,49,1,49,1,49,
  	1,49,3,49,734,8,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
  	3,50,746,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,756,8,51,1,
  	52,1,52,1,52,1,52,1,52,1,52,3,52,764,8,52,1,53,1,53,1,53,1,53,1,53,1,
  	53,1,53,1,53,3,53,774,8,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
  	54,1,54,3,54,786,8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
  	55,3,55,798,8,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,56,808,8,56,
  	1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,822,
  	8,57,1,58,1,58,1,58,1,58,1,58,1,58,3,58,830,8,58,1,59,1,59,1,59,1,59,
  	1,59,1,59,1,59,1,59,3,59,840,8,59,1,60,1,60,1,60,1,60,1,60,1,60,3,60,
  	848,8,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,3,61,860,8,
  	61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,874,
  	8,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,
  	1,69,1,70,4,70,891,8,70,11,70,12,70,892,1,71,1,71,1,72,1,72,1,73,1,73,
  	1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,80,
  	1,80,1,80,1,81,1,81,1,82,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,
  	1,86,1,87,1,87,1,88,1,88,1,88,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,
  	1,90,3,90,944,8,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,3,91,954,8,
  	91,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,3,93,964,8,93,1,94,1,94,1,
  	94,1,94,1,94,1,94,3,94,972,8,94,1,95,1,95,1,95,1,95,3,95,978,8,95,1,96,
  	1,96,1,96,1,96,1,96,1,96,3,96,986,8,96,1,97,1,97,5,97,990,8,97,10,97,
  	12,97,993,9,97,1,97,1,97,1,98,1,98,4,98,999,8,98,11,98,12,98,1000,1,99,
  	1,99,4,99,1005,8,99,11,99,12,99,1006,1,100,4,100,1010,8,100,11,100,12,
  	100,1011,1,100,1,100,4,100,1016,8,100,11,100,12,100,1017,1,100,1,100,
  	4,100,1022,8,100,11,100,12,100,1023,5,100,1026,8,100,10,100,12,100,1029,
  	9,100,1,101,4,101,1032,8,101,11,101,12,101,1033,1,102,1,102,1,103,1,103,
  	1,104,1,104,1,104,1,104,5,104,1044,8,104,10,104,12,104,1047,9,104,1,104,
  	1,104,1,104,3,104,1052,8,104,1,105,1,105,1,106,1,106,1,107,4,107,1059,
  	8,107,11,107,12,107,1060,1,107,1,107,0,0,108,1,1,3,2,5,3,7,4,9,5,11,6,
  	13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
  	37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
  	30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
  	83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
  	53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
  	63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,
  	73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,
  	83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,
  	93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,
  	205,103,207,0,209,0,211,0,213,0,215,104,1,0,8,2,0,10,10,13,13,3,0,10,
  	10,13,13,34,34,2,0,48,49,124,124,3,0,69,69,101,101,124,124,1,0,48,57,
  	3,0,48,57,65,70,97,102,2,0,65,90,97,122,3,0,9,9,13,13,32,32,1147,0,1,
  	1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
  	0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
  	1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
  	0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
  	0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
  	1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
  	0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
  	0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
  	1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,
  	0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,
  	0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
  	0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
  	0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,
  	0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,
  	0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,
  	0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,
  	0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,
  	0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,
  	0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,
  	0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,215,1,0,
  	0,0,1,220,1,0,0,0,3,238,1,0,0,0,5,246,1,0,0,0,7,254,1,0,0,0,9,264,1,0,
  	0,0,11,272,1,0,0,0,13,286,1,0,0,0,15,298,1,0,0,0,17,316,1,0,0,0,19,324,
  	1,0,0,0,21,330,1,0,0,0,23,344,1,0,0,0,25,354,1,0,0,0,27,360,1,0,0,0,29,
  	372,1,0,0,0,31,388,1,0,0,0,33,396,1,0,0,0,35,410,1,0,0,0,37,424,1,0,0,
  	0,39,434,1,0,0,0,41,444,1,0,0,0,43,455,1,0,0,0,45,461,1,0,0,0,47,473,
  	1,0,0,0,49,483,1,0,0,0,51,495,1,0,0,0,53,515,1,0,0,0,55,529,1,0,0,0,57,
  	549,1,0,0,0,59,563,1,0,0,0,61,573,1,0,0,0,63,585,1,0,0,0,65,593,1,0,0,
  	0,67,601,1,0,0,0,69,609,1,0,0,0,71,617,1,0,0,0,73,625,1,0,0,0,75,633,
  	1,0,0,0,77,641,1,0,0,0,79,653,1,0,0,0,81,661,1,0,0,0,83,667,1,0,0,0,85,
  	675,1,0,0,0,87,681,1,0,0,0,89,689,1,0,0,0,91,701,1,0,0,0,93,709,1,0,0,
  	0,95,717,1,0,0,0,97,725,1,0,0,0,99,733,1,0,0,0,101,745,1,0,0,0,103,755,
  	1,0,0,0,105,763,1,0,0,0,107,773,1,0,0,0,109,785,1,0,0,0,111,797,1,0,0,
  	0,113,807,1,0,0,0,115,821,1,0,0,0,117,829,1,0,0,0,119,839,1,0,0,0,121,
  	847,1,0,0,0,123,859,1,0,0,0,125,873,1,0,0,0,127,875,1,0,0,0,129,877,1,
  	0,0,0,131,879,1,0,0,0,133,881,1,0,0,0,135,883,1,0,0,0,137,885,1,0,0,0,
  	139,887,1,0,0,0,141,890,1,0,0,0,143,894,1,0,0,0,145,896,1,0,0,0,147,898,
  	1,0,0,0,149,900,1,0,0,0,151,902,1,0,0,0,153,904,1,0,0,0,155,906,1,0,0,
  	0,157,908,1,0,0,0,159,911,1,0,0,0,161,913,1,0,0,0,163,916,1,0,0,0,165,
  	918,1,0,0,0,167,921,1,0,0,0,169,923,1,0,0,0,171,925,1,0,0,0,173,927,1,
  	0,0,0,175,929,1,0,0,0,177,931,1,0,0,0,179,934,1,0,0,0,181,943,1,0,0,0,
  	183,953,1,0,0,0,185,955,1,0,0,0,187,963,1,0,0,0,189,971,1,0,0,0,191,977,
  	1,0,0,0,193,985,1,0,0,0,195,987,1,0,0,0,197,996,1,0,0,0,199,1002,1,0,
  	0,0,201,1009,1,0,0,0,203,1031,1,0,0,0,205,1035,1,0,0,0,207,1037,1,0,0,
  	0,209,1039,1,0,0,0,211,1053,1,0,0,0,213,1055,1,0,0,0,215,1058,1,0,0,0,
  	217,221,3,33,16,0,218,221,3,129,64,0,219,221,3,139,69,0,220,217,1,0,0,
  	0,220,218,1,0,0,0,220,219,1,0,0,0,221,225,1,0,0,0,222,224,8,0,0,0,223,
  	222,1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,2,1,0,
  	0,0,227,225,1,0,0,0,228,229,5,67,0,0,229,230,5,79,0,0,230,231,5,78,0,
  	0,231,232,5,83,0,0,232,239,5,84,0,0,233,234,5,67,0,0,234,235,5,111,0,
  	0,235,236,5,110,0,0,236,237,5,115,0,0,237,239,5,116,0,0,238,228,1,0,0,
  	0,238,233,1,0,0,0,239,4,1,0,0,0,240,241,5,68,0,0,241,242,5,69,0,0,242,
  	247,5,70,0,0,243,244,5,68,0,0,244,245,5,101,0,0,245,247,5,102,0,0,246,
  	240,1,0,0,0,246,243,1,0,0,0,247,6,1,0,0,0,248,249,5,68,0,0,249,250,5,
  	73,0,0,250,255,5,77,0,0,251,252,5,68,0,0,252,253,5,105,0,0,253,255,5,
  	109,0,0,254,248,1,0,0,0,254,251,1,0,0,0,255,8,1,0,0,0,256,257,5,69,0,
  	0,257,258,5,76,0,0,258,259,5,83,0,0,259,265,5,69,0,0,260,261,5,69,0,0,
  	261,262,5,108,0,0,262,263,5,115,0,0,263,265,5,101,0,0,264,256,1,0,0,0,
  	264,260,1,0,0,0,265,10,1,0,0,0,266,267,5,69,0,0,267,268,5,78,0,0,268,
  	273,5,68,0,0,269,270,5,69,0,0,270,271,5,110,0,0,271,273,5,100,0,0,272,
  	266,1,0,0,0,272,269,1,0,0,0,273,12,1,0,0,0,274,275,5,69,0,0,275,276,5,
  	78,0,0,276,277,5,68,0,0,277,278,5,68,0,0,278,279,5,69,0,0,279,287,5,70,
  	0,0,280,281,5,69,0,0,281,282,5,110,0,0,282,283,5,100,0,0,283,284,5,68,
  	0,0,284,285,5,101,0,0,285,287,5,102,0,0,286,274,1,0,0,0,286,280,1,0,0,
  	0,287,14,1,0,0,0,288,289,5,69,0,0,289,290,5,78,0,0,290,291,5,68,0,0,291,
  	292,5,73,0,0,292,299,5,70,0,0,293,294,5,69,0,0,294,295,5,110,0,0,295,
  	296,5,100,0,0,296,297,5,73,0,0,297,299,5,102,0,0,298,288,1,0,0,0,298,
  	293,1,0,0,0,299,16,1,0,0,0,300,301,5,69,0,0,301,302,5,78,0,0,302,303,
  	5,68,0,0,303,304,5,87,0,0,304,305,5,72,0,0,305,306,5,73,0,0,306,307,5,
  	76,0,0,307,317,5,69,0,0,308,309,5,69,0,0,309,310,5,110,0,0,310,311,5,
  	100,0,0,311,312,5,87,0,0,312,313,5,104,0,0,313,314,5,105,0,0,314,315,
  	5,108,0,0,315,317,5,101,0,0,316,300,1,0,0,0,316,308,1,0,0,0,317,18,1,
  	0,0,0,318,319,5,70,0,0,319,320,5,79,0,0,320,325,5,82,0,0,321,322,5,70,
  	0,0,322,323,5,111,0,0,323,325,5,114,0,0,324,318,1,0,0,0,324,321,1,0,0,
  	0,325,20,1,0,0,0,326,327,5,73,0,0,327,331,5,70,0,0,328,329,5,73,0,0,329,
  	331,5,102,0,0,330,326,1,0,0,0,330,328,1,0,0,0,331,22,1,0,0,0,332,333,
  	5,77,0,0,333,334,5,79,0,0,334,335,5,68,0,0,335,336,5,85,0,0,336,337,5,
  	76,0,0,337,345,5,69,0,0,338,339,5,77,0,0,339,340,5,111,0,0,340,341,5,
  	100,0,0,341,342,5,117,0,0,342,343,5,108,0,0,343,345,5,101,0,0,344,332,
  	1,0,0,0,344,338,1,0,0,0,345,24,1,0,0,0,346,347,5,78,0,0,347,348,5,69,
  	0,0,348,349,5,88,0,0,349,355,5,84,0,0,350,351,5,78,0,0,351,352,5,101,
  	0,0,352,353,5,120,0,0,353,355,5,116,0,0,354,346,1,0,0,0,354,350,1,0,0,
  	0,355,26,1,0,0,0,356,357,5,79,0,0,357,361,5,70,0,0,358,359,5,79,0,0,359,
  	361,5,102,0,0,360,356,1,0,0,0,360,358,1,0,0,0,361,28,1,0,0,0,362,363,
  	5,80,0,0,363,364,5,82,0,0,364,365,5,73,0,0,365,366,5,78,0,0,366,373,5,
  	84,0,0,367,368,5,80,0,0,368,369,5,114,0,0,369,370,5,105,0,0,370,371,5,
  	110,0,0,371,373,5,116,0,0,372,362,1,0,0,0,372,367,1,0,0,0,373,30,1,0,
  	0,0,374,375,5,80,0,0,375,376,5,82,0,0,376,377,5,73,0,0,377,378,5,86,0,
  	0,378,379,5,65,0,0,379,380,5,84,0,0,380,389,5,69,0,0,381,382,5,80,0,0,
  	382,383,5,114,0,0,383,384,5,105,0,0,384,385,5,118,0,0,385,386,5,97,0,
  	0,386,387,5,116,0,0,387,389,5,101,0,0,388,374,1,0,0,0,388,381,1,0,0,0,
  	389,32,1,0,0,0,390,391,5,82,0,0,391,392,5,69,0,0,392,397,5,77,0,0,393,
  	394,5,82,0,0,394,395,5,101,0,0,395,397,5,109,0,0,396,390,1,0,0,0,396,
  	393,1,0,0,0,397,34,1,0,0,0,398,399,5,82,0,0,399,400,5,69,0,0,400,401,
  	5,80,0,0,401,402,5,69,0,0,402,403,5,65,0,0,403,411,5,84,0,0,404,405,5,
  	82,0,0,405,406,5,101,0,0,406,407,5,112,0,0,407,408,5,101,0,0,408,409,
  	5,97,0,0,409,411,5,116,0,0,410,398,1,0,0,0,410,404,1,0,0,0,411,36,1,0,
  	0,0,412,413,5,82,0,0,413,414,5,69,0,0,414,415,5,84,0,0,415,416,5,85,0,
  	0,416,417,5,82,0,0,417,425,5,78,0,0,418,419,5,82,0,0,419,420,5,101,0,
  	0,420,421,5,116,0,0,421,422,5,117,0,0,422,423,5,114,0,0,423,425,5,110,
  	0,0,424,412,1,0,0,0,424,418,1,0,0,0,425,38,1,0,0,0,426,427,5,84,0,0,427,
  	428,5,72,0,0,428,429,5,69,0,0,429,435,5,78,0,0,430,431,5,84,0,0,431,432,
  	5,104,0,0,432,433,5,101,0,0,433,435,5,110,0,0,434,426,1,0,0,0,434,430,
  	1,0,0,0,435,40,1,0,0,0,436,437,5,83,0,0,437,438,5,84,0,0,438,439,5,69,
  	0,0,439,445,5,80,0,0,440,441,5,83,0,0,441,442,5,116,0,0,442,443,5,101,
  	0,0,443,445,5,112,0,0,444,436,1,0,0,0,444,440,1,0,0,0,445,42,1,0,0,0,
  	446,447,5,83,0,0,447,448,5,87,0,0,448,449,5,65,0,0,449,456,5,80,0,0,450,
  	451,5,83,0,0,451,452,5,119,0,0,452,453,5,97,0,0,453,454,5,112,0,0,454,
  	456,5,32,0,0,455,446,1,0,0,0,455,450,1,0,0,0,456,44,1,0,0,0,457,458,5,
  	84,0,0,458,462,5,79,0,0,459,460,5,84,0,0,460,462,5,111,0,0,461,457,1,
  	0,0,0,461,459,1,0,0,0,462,46,1,0,0,0,463,464,5,85,0,0,464,465,5,78,0,
  	0,465,466,5,84,0,0,466,467,5,73,0,0,467,474,5,76,0,0,468,469,5,85,0,0,
  	469,470,5,110,0,0,470,471,5,116,0,0,471,472,5,105,0,0,472,474,5,108,0,
  	0,473,463,1,0,0,0,473,468,1,0,0,0,474,48,1,0,0,0,475,476,5,87,0,0,476,
  	477,5,73,0,0,477,478,5,84,0,0,478,484,5,72,0,0,479,480,5,87,0,0,480,481,
  	5,105,0,0,481,482,5,116,0,0,482,484,5,104,0,0,483,475,1,0,0,0,483,479,
  	1,0,0,0,484,50,1,0,0,0,485,486,5,87,0,0,486,487,5,72,0,0,487,488,5,73,
  	0,0,488,489,5,76,0,0,489,496,5,69,0,0,490,491,5,87,0,0,491,492,5,104,
  	0,0,492,493,5,105,0,0,493,494,5,108,0,0,494,496,5,101,0,0,495,485,1,0,
  	0,0,495,490,1,0,0,0,496,52,1,0,0,0,497,498,5,68,0,0,498,499,5,69,0,0,
  	499,500,5,70,0,0,500,501,5,82,0,0,501,502,5,69,0,0,502,503,5,67,0,0,503,
  	504,5,79,0,0,504,505,5,82,0,0,505,516,5,68,0,0,506,507,5,68,0,0,507,508,
  	5,101,0,0,508,509,5,102,0,0,509,510,5,82,0,0,510,511,5,101,0,0,511,512,
  	5,99,0,0,512,513,5,111,0,0,513,514,5,114,0,0,514,516,5,100,0,0,515,497,
  	1,0,0,0,515,506,1,0,0,0,516,54,1,0,0,0,517,518,5,82,0,0,518,519,5,69,
  	0,0,519,520,5,67,0,0,520,521,5,79,0,0,521,522,5,82,0,0,522,530,5,68,0,
  	0,523,524,5,82,0,0,524,525,5,101,0,0,525,526,5,99,0,0,526,527,5,111,0,
  	0,527,528,5,114,0,0,528,530,5,100,0,0,529,517,1,0,0,0,529,523,1,0,0,0,
  	530,56,1,0,0,0,531,532,5,69,0,0,532,533,5,78,0,0,533,534,5,68,0,0,534,
  	535,5,82,0,0,535,536,5,69,0,0,536,537,5,67,0,0,537,538,5,79,0,0,538,539,
  	5,82,0,0,539,550,5,68,0,0,540,541,5,69,0,0,541,542,5,110,0,0,542,543,
  	5,100,0,0,543,544,5,82,0,0,544,545,5,101,0,0,545,546,5,99,0,0,546,547,
  	5,111,0,0,547,548,5,114,0,0,548,550,5,100,0,0,549,531,1,0,0,0,549,540,
  	1,0,0,0,550,58,1,0,0,0,551,552,5,72,0,0,552,553,5,80,0,0,553,554,5,84,
  	0,0,554,555,5,73,0,0,555,556,5,77,0,0,556,564,5,69,0,0,557,558,5,72,0,
  	0,558,559,5,80,0,0,559,560,5,84,0,0,560,561,5,105,0,0,561,562,5,109,0,
  	0,562,564,5,101,0,0,563,551,1,0,0,0,563,557,1,0,0,0,564,60,1,0,0,0,565,
  	566,5,84,0,0,566,567,5,73,0,0,567,568,5,77,0,0,568,574,5,69,0,0,569,570,
  	5,84,0,0,570,571,5,105,0,0,571,572,5,109,0,0,572,574,5,101,0,0,573,565,
  	1,0,0,0,573,569,1,0,0,0,574,62,1,0,0,0,575,576,5,84,0,0,576,577,5,73,
  	0,0,577,578,5,77,0,0,578,579,5,69,0,0,579,586,5,36,0,0,580,581,5,84,0,
  	0,581,582,5,105,0,0,582,583,5,109,0,0,583,584,5,101,0,0,584,586,5,36,
  	0,0,585,575,1,0,0,0,585,580,1,0,0,0,586,64,1,0,0,0,587,588,5,65,0,0,588,
  	589,5,66,0,0,589,594,5,83,0,0,590,591,5,65,0,0,591,592,5,98,0,0,592,594,
  	5,115,0,0,593,587,1,0,0,0,593,590,1,0,0,0,594,66,1,0,0,0,595,596,5,65,
  	0,0,596,597,5,67,0,0,597,602,5,83,0,0,598,599,5,65,0,0,599,600,5,99,0,
  	0,600,602,5,115,0,0,601,595,1,0,0,0,601,598,1,0,0,0,602,68,1,0,0,0,603,
  	604,5,65,0,0,604,605,5,83,0,0,605,610,5,78,0,0,606,607,5,65,0,0,607,608,
  	5,115,0,0,608,610,5,110,0,0,609,603,1,0,0,0,609,606,1,0,0,0,610,70,1,
  	0,0,0,611,612,5,65,0,0,612,613,5,84,0,0,613,618,5,78,0,0,614,615,5,65,
  	0,0,615,616,5,116,0,0,616,618,5,110,0,0,617,611,1,0,0,0,617,614,1,0,0,
  	0,618,72,1,0,0,0,619,620,5,67,0,0,620,621,5,79,0,0,621,626,5,83,0,0,622,
  	623,5,67,0,0,623,624,5,111,0,0,624,626,5,115,0,0,625,619,1,0,0,0,625,
  	622,1,0,0,0,626,74,1,0,0,0,627,628,5,68,0,0,628,629,5,69,0,0,629,634,
  	5,71,0,0,630,631,5,68,0,0,631,632,5,101,0,0,632,634,5,103,0,0,633,627,
  	1,0,0,0,633,630,1,0,0,0,634,76,1,0,0,0,635,636,5,69,0,0,636,637,5,88,
  	0,0,637,642,5,80,0,0,638,639,5,69,0,0,639,640,5,120,0,0,640,642,5,112,
  	0,0,641,635,1,0,0,0,641,638,1,0,0,0,642,78,1,0,0,0,643,644,5,70,0,0,644,
  	645,5,76,0,0,645,646,5,79,0,0,646,647,5,79,0,0,647,654,5,82,0,0,648,649,
  	5,70,0,0,649,650,5,108,0,0,650,651,5,111,0,0,651,652,5,111,0,0,652,654,
  	5,114,0,0,653,643,1,0,0,0,653,648,1,0,0,0,654,80,1,0,0,0,655,656,5,76,
  	0,0,656,657,5,69,0,0,657,662,5,84,0,0,658,659,5,76,0,0,659,660,5,101,
  	0,0,660,662,5,116,0,0,661,655,1,0,0,0,661,658,1,0,0,0,662,82,1,0,0,0,
  	663,664,5,76,0,0,664,668,5,78,0,0,665,666,5,76,0,0,666,668,5,110,0,0,
  	667,663,1,0,0,0,667,665,1,0,0,0,668,84,1,0,0,0,669,670,5,76,0,0,670,671,
  	5,79,0,0,671,676,5,71,0,0,672,673,5,76,0,0,673,674,5,111,0,0,674,676,
  	5,103,0,0,675,669,1,0,0,0,675,672,1,0,0,0,676,86,1,0,0,0,677,678,5,80,
  	0,0,678,682,5,73,0,0,679,680,5,80,0,0,680,682,5,105,0,0,681,677,1,0,0,
  	0,681,679,1,0,0,0,682,88,1,0,0,0,683,684,5,82,0,0,684,685,5,65,0,0,685,
  	690,5,68,0,0,686,687,5,82,0,0,687,688,5,97,0,0,688,690,5,100,0,0,689,
  	683,1,0,0,0,689,686,1,0,0,0,690,90,1,0,0,0,691,692,5,82,0,0,692,693,5,
  	79,0,0,693,694,5,85,0,0,694,695,5,78,0,0,695,702,5,68,0,0,696,697,5,82,
  	0,0,697,698,5,111,0,0,698,699,5,117,0,0,699,700,5,110,0,0,700,702,5,100,
  	0,0,701,691,1,0,0,0,701,696,1,0,0,0,702,92,1,0,0,0,703,704,5,83,0,0,704,
  	705,5,71,0,0,705,710,5,78,0,0,706,707,5,83,0,0,707,708,5,103,0,0,708,
  	710,5,110,0,0,709,703,1,0,0,0,709,706,1,0,0,0,710,94,1,0,0,0,711,712,
  	5,83,0,0,712,713,5,73,0,0,713,718,5,78,0,0,714,715,5,83,0,0,715,716,5,
  	105,0,0,716,718,5,110,0,0,717,711,1,0,0,0,717,714,1,0,0,0,718,96,1,0,
  	0,0,719,720,5,83,0,0,720,721,5,81,0,0,721,726,5,82,0,0,722,723,5,83,0,
  	0,723,724,5,113,0,0,724,726,5,114,0,0,725,719,1,0,0,0,725,722,1,0,0,0,
  	726,98,1,0,0,0,727,728,5,84,0,0,728,729,5,65,0,0,729,734,5,78,0,0,730,
  	731,5,84,0,0,731,732,5,97,0,0,732,734,5,110,0,0,733,727,1,0,0,0,733,730,
  	1,0,0,0,734,100,1,0,0,0,735,736,5,70,0,0,736,737,5,65,0,0,737,738,5,76,
  	0,0,738,739,5,83,0,0,739,746,5,69,0,0,740,741,5,70,0,0,741,742,5,97,0,
  	0,742,743,5,108,0,0,743,744,5,115,0,0,744,746,5,101,0,0,745,735,1,0,0,
  	0,745,740,1,0,0,0,746,102,1,0,0,0,747,748,5,84,0,0,748,749,5,82,0,0,749,
  	750,5,85,0,0,750,756,5,69,0,0,751,752,5,84,0,0,752,753,5,114,0,0,753,
  	754,5,117,0,0,754,756,5,101,0,0,755,747,1,0,0,0,755,751,1,0,0,0,756,104,
  	1,0,0,0,757,758,5,65,0,0,758,759,5,83,0,0,759,764,5,67,0,0,760,761,5,
  	65,0,0,761,762,5,115,0,0,762,764,5,99,0,0,763,757,1,0,0,0,763,760,1,0,
  	0,0,764,106,1,0,0,0,765,766,5,67,0,0,766,767,5,72,0,0,767,768,5,82,0,
  	0,768,774,5,36,0,0,769,770,5,67,0,0,770,771,5,104,0,0,771,772,5,114,0,
  	0,772,774,5,36,0,0,773,765,1,0,0,0,773,769,1,0,0,0,774,108,1,0,0,0,775,
  	776,5,73,0,0,776,777,5,78,0,0,777,778,5,83,0,0,778,779,5,84,0,0,779,786,
  	5,82,0,0,780,781,5,73,0,0,781,782,5,110,0,0,782,783,5,115,0,0,783,784,
  	5,116,0,0,784,786,5,114,0,0,785,775,1,0,0,0,785,780,1,0,0,0,786,110,1,
  	0,0,0,787,788,5,76,0,0,788,789,5,69,0,0,789,790,5,70,0,0,790,791,5,84,
  	0,0,791,798,5,36,0,0,792,793,5,76,0,0,793,794,5,101,0,0,794,795,5,102,
  	0,0,795,796,5,116,0,0,796,798,5,36,0,0,797,787,1,0,0,0,797,792,1,0,0,
  	0,798,112,1,0,0,0,799,800,5,77,0,0,800,801,5,73,0,0,801,802,5,68,0,0,
  	802,808,5,36,0,0,803,804,5,77,0,0,804,805,5,105,0,0,805,806,5,100,0,0,
  	806,808,5,36,0,0,807,799,1,0,0,0,807,803,1,0,0,0,808,114,1,0,0,0,809,
  	810,5,82,0,0,810,811,5,73,0,0,811,812,5,71,0,0,812,813,5,72,0,0,813,814,
  	5,84,0,0,814,822,5,36,0,0,815,816,5,82,0,0,816,817,5,105,0,0,817,818,
  	5,103,0,0,818,819,5,104,0,0,819,820,5,116,0,0,820,822,5,36,0,0,821,809,
  	1,0,0,0,821,815,1,0,0,0,822,116,1,0,0,0,823,824,5,76,0,0,824,825,5,69,
  	0,0,825,830,5,78,0,0,826,827,5,76,0,0,827,828,5,101,0,0,828,830,5,110,
  	0,0,829,823,1,0,0,0,829,826,1,0,0,0,830,118,1,0,0,0,831,832,5,66,0,0,
  	832,833,5,89,0,0,833,834,5,84,0,0,834,840,5,69,0,0,835,836,5,66,0,0,836,
  	837,5,121,0,0,837,838,5,116,0,0,838,840,5,101,0,0,839,831,1,0,0,0,839,
  	835,1,0,0,0,840,120,1,0,0,0,841,842,5,73,0,0,842,843,5,78,0,0,843,848,
  	5,84,0,0,844,845,5,73,0,0,845,846,5,110,0,0,846,848,5,116,0,0,847,841,
  	1,0,0,0,847,844,1,0,0,0,848,122,1,0,0,0,849,850,5,70,0,0,850,851,5,76,
  	0,0,851,852,5,79,0,0,852,853,5,65,0,0,853,860,5,84,0,0,854,855,5,70,0,
  	0,855,856,5,108,0,0,856,857,5,111,0,0,857,858,5,97,0,0,858,860,5,116,
  	0,0,859,849,1,0,0,0,859,854,1,0,0,0,860,124,1,0,0,0,861,862,5,83,0,0,
  	862,863,5,84,0,0,863,864,5,82,0,0,864,865,5,73,0,0,865,866,5,78,0,0,866,
  	874,5,71,0,0,867,868,5,83,0,0,868,869,5,116,0,0,869,870,5,114,0,0,870,
  	871,5,105,0,0,871,872,5,110,0,0,872,874,5,103,0,0,873,861,1,0,0,0,873,
  	867,1,0,0,0,874,126,1,0,0,0,875,876,5,36,0,0,876,128,1,0,0,0,877,878,
  	5,35,0,0,878,130,1,0,0,0,879,880,5,58,0,0,880,132,1,0,0,0,881,882,5,59,
  	0,0,882,134,1,0,0,0,883,884,5,46,0,0,884,136,1,0,0,0,885,886,5,44,0,0,
  	886,138,1,0,0,0,887,888,5,39,0,0,888,140,1,0,0,0,889,891,5,10,0,0,890,
  	889,1,0,0,0,891,892,1,0,0,0,892,890,1,0,0,0,892,893,1,0,0,0,893,142,1,
  	0,0,0,894,895,5,37,0,0,895,144,1,0,0,0,896,897,5,95,0,0,897,146,1,0,0,
  	0,898,899,5,40,0,0,899,148,1,0,0,0,900,901,5,41,0,0,901,150,1,0,0,0,902,
  	903,5,91,0,0,903,152,1,0,0,0,904,905,5,93,0,0,905,154,1,0,0,0,906,907,
  	5,61,0,0,907,156,1,0,0,0,908,909,5,60,0,0,909,910,5,62,0,0,910,158,1,
  	0,0,0,911,912,5,62,0,0,912,160,1,0,0,0,913,914,5,62,0,0,914,915,5,61,
  	0,0,915,162,1,0,0,0,916,917,5,60,0,0,917,164,1,0,0,0,918,919,5,60,0,0,
  	919,920,5,61,0,0,920,166,1,0,0,0,921,922,5,94,0,0,922,168,1,0,0,0,923,
  	924,5,43,0,0,924,170,1,0,0,0,925,926,5,45,0,0,926,172,1,0,0,0,927,928,
  	5,42,0,0,928,174,1,0,0,0,929,930,5,47,0,0,930,176,1,0,0,0,931,932,5,60,
  	0,0,932,933,5,60,0,0,933,178,1,0,0,0,934,935,5,62,0,0,935,936,5,62,0,
  	0,936,180,1,0,0,0,937,938,5,77,0,0,938,939,5,79,0,0,939,944,5,68,0,0,
  	940,941,5,77,0,0,941,942,5,111,0,0,942,944,5,100,0,0,943,937,1,0,0,0,
  	943,940,1,0,0,0,944,182,1,0,0,0,945,946,5,68,0,0,946,947,5,73,0,0,947,
  	954,5,86,0,0,948,949,5,68,0,0,949,950,5,105,0,0,950,954,5,118,0,0,951,
  	952,5,47,0,0,952,954,5,47,0,0,953,945,1,0,0,0,953,948,1,0,0,0,953,951,
  	1,0,0,0,954,184,1,0,0,0,955,956,5,126,0,0,956,186,1,0,0,0,957,958,5,78,
  	0,0,958,959,5,79,0,0,959,964,5,84,0,0,960,961,5,78,0,0,961,962,5,111,
  	0,0,962,964,5,116,0,0,963,957,1,0,0,0,963,960,1,0,0,0,964,188,1,0,0,0,
  	965,966,5,65,0,0,966,967,5,78,0,0,967,972,5,68,0,0,968,969,5,65,0,0,969,
  	970,5,110,0,0,970,972,5,100,0,0,971,965,1,0,0,0,971,968,1,0,0,0,972,190,
  	1,0,0,0,973,974,5,79,0,0,974,978,5,82,0,0,975,976,5,79,0,0,976,978,5,
  	114,0,0,977,973,1,0,0,0,977,975,1,0,0,0,978,192,1,0,0,0,979,980,5,69,
  	0,0,980,981,5,79,0,0,981,986,5,82,0,0,982,983,5,69,0,0,983,984,5,111,
  	0,0,984,986,5,114,0,0,985,979,1,0,0,0,985,982,1,0,0,0,986,194,1,0,0,0,
  	987,991,5,34,0,0,988,990,8,1,0,0,989,988,1,0,0,0,990,993,1,0,0,0,991,
  	989,1,0,0,0,991,992,1,0,0,0,992,994,1,0,0,0,993,991,1,0,0,0,994,995,5,
  	34,0,0,995,196,1,0,0,0,996,998,5,38,0,0,997,999,3,207,103,0,998,997,1,
  	0,0,0,999,1000,1,0,0,0,1000,998,1,0,0,0,1000,1001,1,0,0,0,1001,198,1,
  	0,0,0,1002,1004,3,143,71,0,1003,1005,7,2,0,0,1004,1003,1,0,0,0,1005,1006,
  	1,0,0,0,1006,1004,1,0,0,0,1006,1007,1,0,0,0,1007,200,1,0,0,0,1008,1010,
  	3,213,106,0,1009,1008,1,0,0,0,1010,1011,1,0,0,0,1011,1009,1,0,0,0,1011,
  	1012,1,0,0,0,1012,1013,1,0,0,0,1013,1015,5,46,0,0,1014,1016,3,213,106,
  	0,1015,1014,1,0,0,0,1016,1017,1,0,0,0,1017,1015,1,0,0,0,1017,1018,1,0,
  	0,0,1018,1027,1,0,0,0,1019,1021,7,3,0,0,1020,1022,7,4,0,0,1021,1020,1,
  	0,0,0,1022,1023,1,0,0,0,1023,1021,1,0,0,0,1023,1024,1,0,0,0,1024,1026,
  	1,0,0,0,1025,1019,1,0,0,0,1026,1029,1,0,0,0,1027,1025,1,0,0,0,1027,1028,
  	1,0,0,0,1028,202,1,0,0,0,1029,1027,1,0,0,0,1030,1032,3,213,106,0,1031,
  	1030,1,0,0,0,1032,1033,1,0,0,0,1033,1031,1,0,0,0,1033,1034,1,0,0,0,1034,
  	204,1,0,0,0,1035,1036,3,209,104,0,1036,206,1,0,0,0,1037,1038,7,5,0,0,
  	1038,208,1,0,0,0,1039,1045,3,211,105,0,1040,1044,3,211,105,0,1041,1044,
  	3,213,106,0,1042,1044,3,145,72,0,1043,1040,1,0,0,0,1043,1041,1,0,0,0,
  	1043,1042,1,0,0,0,1044,1047,1,0,0,0,1045,1043,1,0,0,0,1045,1046,1,0,0,
  	0,1046,1051,1,0,0,0,1047,1045,1,0,0,0,1048,1052,3,143,71,0,1049,1052,
  	3,127,63,0,1050,1052,3,129,64,0,1051,1048,1,0,0,0,1051,1049,1,0,0,0,1051,
  	1050,1,0,0,0,1051,1052,1,0,0,0,1052,210,1,0,0,0,1053,1054,7,6,0,0,1054,
  	212,1,0,0,0,1055,1056,7,4,0,0,1056,214,1,0,0,0,1057,1059,7,7,0,0,1058,
  	1057,1,0,0,0,1059,1060,1,0,0,0,1060,1058,1,0,0,0,1060,1061,1,0,0,0,1061,
  	1062,1,0,0,0,1062,1063,6,107,0,0,1063,216,1,0,0,0,84,0,220,225,238,246,
  	254,264,272,286,298,316,324,330,344,354,360,372,388,396,410,424,434,444,
  	455,461,473,483,495,515,529,549,563,573,585,593,601,609,617,625,633,641,
  	653,661,667,675,681,689,701,709,717,725,733,745,755,763,773,785,797,807,
  	821,829,839,847,859,873,892,943,953,963,971,977,985,991,1000,1006,1011,
  	1017,1023,1027,1033,1043,1045,1051,1060,1,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  dariclexerLexerStaticData = staticData.release();
}

}

DaricLexer::DaricLexer(CharStream *input) : Lexer(input) {
  DaricLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *dariclexerLexerStaticData->atn, dariclexerLexerStaticData->decisionToDFA, dariclexerLexerStaticData->sharedContextCache);
}

DaricLexer::~DaricLexer() {
  delete _interpreter;
}

std::string DaricLexer::getGrammarFileName() const {
  return "Daric.g4";
}

const std::vector<std::string>& DaricLexer::getRuleNames() const {
  return dariclexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& DaricLexer::getChannelNames() const {
  return dariclexerLexerStaticData->channelNames;
}

const std::vector<std::string>& DaricLexer::getModeNames() const {
  return dariclexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& DaricLexer::getVocabulary() const {
  return dariclexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView DaricLexer::getSerializedATN() const {
  return dariclexerLexerStaticData->serializedATN;
}

const atn::ATN& DaricLexer::getATN() const {
  return *dariclexerLexerStaticData->atn;
}




void DaricLexer::initialize() {
  ::antlr4::internal::call_once(dariclexerLexerOnceFlag, dariclexerLexerInitialize);
}
