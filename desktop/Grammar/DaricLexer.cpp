
// Generated from Daric.g4 by ANTLR 4.11.1


#include "DaricLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct DaricLexerStaticData final {
  DaricLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  DaricLexerStaticData(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData(DaricLexerStaticData&&) = delete;
  DaricLexerStaticData& operator=(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData& operator=(DaricLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag dariclexerLexerOnceFlag;
DaricLexerStaticData *dariclexerLexerStaticData = nullptr;

void dariclexerLexerInitialize() {
  assert(dariclexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<DaricLexerStaticData>(
    std::vector<std::string>{
      "COMMENT", "CONST", "DEF", "DIM", "ELSE", "END", "ENDDEF", "ENDIF", 
      "ENDWHILE", "IF", "MODULE", "OF", "PRINT", "PRIVATE", "REM", "REPEAT", 
      "RETURN", "THEN", "SWAP", "UNTIL", "WITH", "WHILE", "DEFRECORD", "RECORD", 
      "ENDRECORD", "HPTIME", "TIME", "TIMES", "ABS", "ACS", "ASN", "ATN", 
      "COS", "DEG", "EXP", "FLOOR", "LET", "LN", "LOG", "PI", "RAD", "ROUND", 
      "SGN", "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHRS", "INSTR", 
      "LEFTS", "MIDS", "RIGHTS", "LEN", "BYTE", "INT", "FLOAT", "STRING", 
      "DOLLAR", "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "HEX", "NAME", "ALPHA", "DIGIT", "WS"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "'$'", "'#'", "':'", "';'", "'.'", 
      "','", "'''", "", "'%'", "'_'", "'('", "')'", "'['", "']'", "'='", 
      "'<>'", "'>'", "'>='", "'<'", "'<='", "'^'", "'+'", "'-'", "'*'", 
      "'/'", "'<<'", "'>>'", "", "", "'~'"
    },
    std::vector<std::string>{
      "", "COMMENT", "CONST", "DEF", "DIM", "ELSE", "END", "ENDDEF", "ENDIF", 
      "ENDWHILE", "IF", "MODULE", "OF", "PRINT", "PRIVATE", "REM", "REPEAT", 
      "RETURN", "THEN", "SWAP", "UNTIL", "WITH", "WHILE", "DEFRECORD", "RECORD", 
      "ENDRECORD", "HPTIME", "TIME", "TIMES", "ABS", "ACS", "ASN", "ATN", 
      "COS", "DEG", "EXP", "FLOOR", "LET", "LN", "LOG", "PI", "RAD", "ROUND", 
      "SGN", "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHRS", "INSTR", 
      "LEFTS", "MIDS", "RIGHTS", "LEN", "BYTE", "INT", "FLOAT", "STRING", 
      "DOLLAR", "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "WS"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,100,1022,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,1,0,
  	1,0,1,0,3,0,213,8,0,1,0,5,0,216,8,0,10,0,12,0,219,9,0,1,1,1,1,1,1,1,1,
  	1,1,1,1,1,1,1,1,1,1,1,1,3,1,231,8,1,1,2,1,2,1,2,1,2,1,2,1,2,3,2,239,8,
  	2,1,3,1,3,1,3,1,3,1,3,1,3,3,3,247,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
  	3,4,257,8,4,1,5,1,5,1,5,1,5,1,5,1,5,3,5,265,8,5,1,6,1,6,1,6,1,6,1,6,1,
  	6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,279,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
  	1,7,1,7,3,7,291,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
  	8,1,8,1,8,1,8,3,8,309,8,8,1,9,1,9,1,9,1,9,3,9,315,8,9,1,10,1,10,1,10,
  	1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,329,8,10,1,11,1,11,
  	1,11,1,11,3,11,335,8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
  	1,12,3,12,347,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
  	1,13,1,13,1,13,1,13,3,13,363,8,13,1,14,1,14,1,14,1,14,1,14,1,14,3,14,
  	371,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
  	3,15,385,8,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
  	1,16,3,16,399,8,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,409,8,
  	17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,420,8,18,1,19,1,
  	19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,432,8,19,1,20,1,20,1,
  	20,1,20,1,20,1,20,1,20,1,20,3,20,442,8,20,1,21,1,21,1,21,1,21,1,21,1,
  	21,1,21,1,21,1,21,1,21,3,21,454,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,
  	22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,474,8,
  	22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,488,
  	8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
  	1,24,1,24,1,24,1,24,1,24,3,24,508,8,24,1,25,1,25,1,25,1,25,1,25,1,25,
  	1,25,1,25,1,25,1,25,1,25,1,25,3,25,522,8,25,1,26,1,26,1,26,1,26,1,26,
  	1,26,1,26,1,26,3,26,532,8,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
  	1,27,1,27,3,27,544,8,27,1,28,1,28,1,28,1,28,1,28,1,28,3,28,552,8,28,1,
  	29,1,29,1,29,1,29,1,29,1,29,3,29,560,8,29,1,30,1,30,1,30,1,30,1,30,1,
  	30,3,30,568,8,30,1,31,1,31,1,31,1,31,1,31,1,31,3,31,576,8,31,1,32,1,32,
  	1,32,1,32,1,32,1,32,3,32,584,8,32,1,33,1,33,1,33,1,33,1,33,1,33,3,33,
  	592,8,33,1,34,1,34,1,34,1,34,1,34,1,34,3,34,600,8,34,1,35,1,35,1,35,1,
  	35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,612,8,35,1,36,1,36,1,36,1,36,1,
  	36,1,36,3,36,620,8,36,1,37,1,37,1,37,1,37,3,37,626,8,37,1,38,1,38,1,38,
  	1,38,1,38,1,38,3,38,634,8,38,1,39,1,39,1,39,1,39,3,39,640,8,39,1,40,1,
  	40,1,40,1,40,1,40,1,40,3,40,648,8,40,1,41,1,41,1,41,1,41,1,41,1,41,1,
  	41,1,41,1,41,1,41,3,41,660,8,41,1,42,1,42,1,42,1,42,1,42,1,42,3,42,668,
  	8,42,1,43,1,43,1,43,1,43,1,43,1,43,3,43,676,8,43,1,44,1,44,1,44,1,44,
  	1,44,1,44,3,44,684,8,44,1,45,1,45,1,45,1,45,1,45,1,45,3,45,692,8,45,1,
  	46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,3,46,704,8,46,1,47,1,
  	47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,714,8,47,1,48,1,48,1,48,1,48,1,
  	48,1,48,3,48,722,8,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,3,49,732,
  	8,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,744,8,50,
  	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,756,8,51,1,52,
  	1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,766,8,52,1,53,1,53,1,53,1,53,
  	1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,780,8,53,1,54,1,54,1,54,
  	1,54,1,54,1,54,3,54,788,8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
  	3,55,798,8,55,1,56,1,56,1,56,1,56,1,56,1,56,3,56,806,8,56,1,57,1,57,1,
  	57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,818,8,57,1,58,1,58,1,58,1,
  	58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,3,58,832,8,58,1,59,1,59,1,
  	60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,4,66,849,
  	8,66,11,66,12,66,850,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,
  	1,72,1,72,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,76,1,76,1,76,1,77,1,77,
  	1,78,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,
  	1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,86,1,86,3,86,902,8,86,
  	1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,3,87,912,8,87,1,88,1,88,1,89,
  	1,89,1,89,1,89,1,89,1,89,3,89,922,8,89,1,90,1,90,1,90,1,90,1,90,1,90,
  	3,90,930,8,90,1,91,1,91,1,91,1,91,3,91,936,8,91,1,92,1,92,1,92,1,92,1,
  	92,1,92,3,92,944,8,92,1,93,1,93,5,93,948,8,93,10,93,12,93,951,9,93,1,
  	93,1,93,1,94,1,94,4,94,957,8,94,11,94,12,94,958,1,95,1,95,4,95,963,8,
  	95,11,95,12,95,964,1,96,4,96,968,8,96,11,96,12,96,969,1,96,1,96,4,96,
  	974,8,96,11,96,12,96,975,1,96,1,96,4,96,980,8,96,11,96,12,96,981,5,96,
  	984,8,96,10,96,12,96,987,9,96,1,97,4,97,990,8,97,11,97,12,97,991,1,98,
  	1,98,1,99,1,99,1,100,1,100,1,100,1,100,5,100,1002,8,100,10,100,12,100,
  	1005,9,100,1,100,1,100,1,100,3,100,1010,8,100,1,101,1,101,1,102,1,102,
  	1,103,4,103,1017,8,103,11,103,12,103,1018,1,103,1,103,0,0,104,1,1,3,2,
  	5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
  	16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
  	55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
  	39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
  	101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
  	121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
  	141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,
  	161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,
  	181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,0,
  	201,0,203,0,205,0,207,100,1,0,8,2,0,10,10,13,13,3,0,10,10,13,13,34,34,
  	2,0,48,49,124,124,3,0,69,69,101,101,124,124,1,0,48,57,3,0,48,57,65,70,
  	97,102,2,0,65,90,97,122,3,0,9,9,13,13,32,32,1101,0,1,1,0,0,0,0,3,1,0,
  	0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
  	1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,
  	0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
  	0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
  	1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
  	0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,
  	0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
  	1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,
  	0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
  	0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
  	0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
  	0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,
  	0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,
  	0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,
  	0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,
  	0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,
  	0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,
  	0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,
  	0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,207,1,0,0,0,
  	1,212,1,0,0,0,3,230,1,0,0,0,5,238,1,0,0,0,7,246,1,0,0,0,9,256,1,0,0,0,
  	11,264,1,0,0,0,13,278,1,0,0,0,15,290,1,0,0,0,17,308,1,0,0,0,19,314,1,
  	0,0,0,21,328,1,0,0,0,23,334,1,0,0,0,25,346,1,0,0,0,27,362,1,0,0,0,29,
  	370,1,0,0,0,31,384,1,0,0,0,33,398,1,0,0,0,35,408,1,0,0,0,37,419,1,0,0,
  	0,39,431,1,0,0,0,41,441,1,0,0,0,43,453,1,0,0,0,45,473,1,0,0,0,47,487,
  	1,0,0,0,49,507,1,0,0,0,51,521,1,0,0,0,53,531,1,0,0,0,55,543,1,0,0,0,57,
  	551,1,0,0,0,59,559,1,0,0,0,61,567,1,0,0,0,63,575,1,0,0,0,65,583,1,0,0,
  	0,67,591,1,0,0,0,69,599,1,0,0,0,71,611,1,0,0,0,73,619,1,0,0,0,75,625,
  	1,0,0,0,77,633,1,0,0,0,79,639,1,0,0,0,81,647,1,0,0,0,83,659,1,0,0,0,85,
  	667,1,0,0,0,87,675,1,0,0,0,89,683,1,0,0,0,91,691,1,0,0,0,93,703,1,0,0,
  	0,95,713,1,0,0,0,97,721,1,0,0,0,99,731,1,0,0,0,101,743,1,0,0,0,103,755,
  	1,0,0,0,105,765,1,0,0,0,107,779,1,0,0,0,109,787,1,0,0,0,111,797,1,0,0,
  	0,113,805,1,0,0,0,115,817,1,0,0,0,117,831,1,0,0,0,119,833,1,0,0,0,121,
  	835,1,0,0,0,123,837,1,0,0,0,125,839,1,0,0,0,127,841,1,0,0,0,129,843,1,
  	0,0,0,131,845,1,0,0,0,133,848,1,0,0,0,135,852,1,0,0,0,137,854,1,0,0,0,
  	139,856,1,0,0,0,141,858,1,0,0,0,143,860,1,0,0,0,145,862,1,0,0,0,147,864,
  	1,0,0,0,149,866,1,0,0,0,151,869,1,0,0,0,153,871,1,0,0,0,155,874,1,0,0,
  	0,157,876,1,0,0,0,159,879,1,0,0,0,161,881,1,0,0,0,163,883,1,0,0,0,165,
  	885,1,0,0,0,167,887,1,0,0,0,169,889,1,0,0,0,171,892,1,0,0,0,173,901,1,
  	0,0,0,175,911,1,0,0,0,177,913,1,0,0,0,179,921,1,0,0,0,181,929,1,0,0,0,
  	183,935,1,0,0,0,185,943,1,0,0,0,187,945,1,0,0,0,189,954,1,0,0,0,191,960,
  	1,0,0,0,193,967,1,0,0,0,195,989,1,0,0,0,197,993,1,0,0,0,199,995,1,0,0,
  	0,201,997,1,0,0,0,203,1011,1,0,0,0,205,1013,1,0,0,0,207,1016,1,0,0,0,
  	209,213,3,29,14,0,210,213,3,121,60,0,211,213,3,131,65,0,212,209,1,0,0,
  	0,212,210,1,0,0,0,212,211,1,0,0,0,213,217,1,0,0,0,214,216,8,0,0,0,215,
  	214,1,0,0,0,216,219,1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,2,1,0,
  	0,0,219,217,1,0,0,0,220,221,5,67,0,0,221,222,5,79,0,0,222,223,5,78,0,
  	0,223,224,5,83,0,0,224,231,5,84,0,0,225,226,5,67,0,0,226,227,5,111,0,
  	0,227,228,5,110,0,0,228,229,5,115,0,0,229,231,5,116,0,0,230,220,1,0,0,
  	0,230,225,1,0,0,0,231,4,1,0,0,0,232,233,5,68,0,0,233,234,5,69,0,0,234,
  	239,5,70,0,0,235,236,5,68,0,0,236,237,5,101,0,0,237,239,5,102,0,0,238,
  	232,1,0,0,0,238,235,1,0,0,0,239,6,1,0,0,0,240,241,5,68,0,0,241,242,5,
  	73,0,0,242,247,5,77,0,0,243,244,5,68,0,0,244,245,5,105,0,0,245,247,5,
  	109,0,0,246,240,1,0,0,0,246,243,1,0,0,0,247,8,1,0,0,0,248,249,5,69,0,
  	0,249,250,5,76,0,0,250,251,5,83,0,0,251,257,5,69,0,0,252,253,5,69,0,0,
  	253,254,5,108,0,0,254,255,5,115,0,0,255,257,5,101,0,0,256,248,1,0,0,0,
  	256,252,1,0,0,0,257,10,1,0,0,0,258,259,5,69,0,0,259,260,5,78,0,0,260,
  	265,5,68,0,0,261,262,5,69,0,0,262,263,5,110,0,0,263,265,5,100,0,0,264,
  	258,1,0,0,0,264,261,1,0,0,0,265,12,1,0,0,0,266,267,5,69,0,0,267,268,5,
  	78,0,0,268,269,5,68,0,0,269,270,5,68,0,0,270,271,5,69,0,0,271,279,5,70,
  	0,0,272,273,5,69,0,0,273,274,5,110,0,0,274,275,5,100,0,0,275,276,5,68,
  	0,0,276,277,5,101,0,0,277,279,5,102,0,0,278,266,1,0,0,0,278,272,1,0,0,
  	0,279,14,1,0,0,0,280,281,5,69,0,0,281,282,5,78,0,0,282,283,5,68,0,0,283,
  	284,5,73,0,0,284,291,5,70,0,0,285,286,5,69,0,0,286,287,5,110,0,0,287,
  	288,5,100,0,0,288,289,5,73,0,0,289,291,5,102,0,0,290,280,1,0,0,0,290,
  	285,1,0,0,0,291,16,1,0,0,0,292,293,5,69,0,0,293,294,5,78,0,0,294,295,
  	5,68,0,0,295,296,5,87,0,0,296,297,5,72,0,0,297,298,5,73,0,0,298,299,5,
  	76,0,0,299,309,5,69,0,0,300,301,5,69,0,0,301,302,5,110,0,0,302,303,5,
  	100,0,0,303,304,5,87,0,0,304,305,5,104,0,0,305,306,5,105,0,0,306,307,
  	5,108,0,0,307,309,5,101,0,0,308,292,1,0,0,0,308,300,1,0,0,0,309,18,1,
  	0,0,0,310,311,5,73,0,0,311,315,5,70,0,0,312,313,5,73,0,0,313,315,5,102,
  	0,0,314,310,1,0,0,0,314,312,1,0,0,0,315,20,1,0,0,0,316,317,5,77,0,0,317,
  	318,5,79,0,0,318,319,5,68,0,0,319,320,5,85,0,0,320,321,5,76,0,0,321,329,
  	5,69,0,0,322,323,5,77,0,0,323,324,5,111,0,0,324,325,5,100,0,0,325,326,
  	5,117,0,0,326,327,5,108,0,0,327,329,5,101,0,0,328,316,1,0,0,0,328,322,
  	1,0,0,0,329,22,1,0,0,0,330,331,5,79,0,0,331,335,5,70,0,0,332,333,5,79,
  	0,0,333,335,5,102,0,0,334,330,1,0,0,0,334,332,1,0,0,0,335,24,1,0,0,0,
  	336,337,5,80,0,0,337,338,5,82,0,0,338,339,5,73,0,0,339,340,5,78,0,0,340,
  	347,5,84,0,0,341,342,5,80,0,0,342,343,5,114,0,0,343,344,5,105,0,0,344,
  	345,5,110,0,0,345,347,5,116,0,0,346,336,1,0,0,0,346,341,1,0,0,0,347,26,
  	1,0,0,0,348,349,5,80,0,0,349,350,5,82,0,0,350,351,5,73,0,0,351,352,5,
  	86,0,0,352,353,5,65,0,0,353,354,5,84,0,0,354,363,5,69,0,0,355,356,5,80,
  	0,0,356,357,5,114,0,0,357,358,5,105,0,0,358,359,5,118,0,0,359,360,5,97,
  	0,0,360,361,5,116,0,0,361,363,5,101,0,0,362,348,1,0,0,0,362,355,1,0,0,
  	0,363,28,1,0,0,0,364,365,5,82,0,0,365,366,5,69,0,0,366,371,5,77,0,0,367,
  	368,5,82,0,0,368,369,5,101,0,0,369,371,5,109,0,0,370,364,1,0,0,0,370,
  	367,1,0,0,0,371,30,1,0,0,0,372,373,5,82,0,0,373,374,5,69,0,0,374,375,
  	5,80,0,0,375,376,5,69,0,0,376,377,5,65,0,0,377,385,5,84,0,0,378,379,5,
  	82,0,0,379,380,5,101,0,0,380,381,5,112,0,0,381,382,5,101,0,0,382,383,
  	5,97,0,0,383,385,5,116,0,0,384,372,1,0,0,0,384,378,1,0,0,0,385,32,1,0,
  	0,0,386,387,5,82,0,0,387,388,5,69,0,0,388,389,5,84,0,0,389,390,5,85,0,
  	0,390,391,5,82,0,0,391,399,5,78,0,0,392,393,5,82,0,0,393,394,5,101,0,
  	0,394,395,5,116,0,0,395,396,5,117,0,0,396,397,5,114,0,0,397,399,5,110,
  	0,0,398,386,1,0,0,0,398,392,1,0,0,0,399,34,1,0,0,0,400,401,5,84,0,0,401,
  	402,5,72,0,0,402,403,5,69,0,0,403,409,5,78,0,0,404,405,5,84,0,0,405,406,
  	5,104,0,0,406,407,5,101,0,0,407,409,5,110,0,0,408,400,1,0,0,0,408,404,
  	1,0,0,0,409,36,1,0,0,0,410,411,5,83,0,0,411,412,5,87,0,0,412,413,5,65,
  	0,0,413,420,5,80,0,0,414,415,5,83,0,0,415,416,5,119,0,0,416,417,5,97,
  	0,0,417,418,5,112,0,0,418,420,5,32,0,0,419,410,1,0,0,0,419,414,1,0,0,
  	0,420,38,1,0,0,0,421,422,5,85,0,0,422,423,5,78,0,0,423,424,5,84,0,0,424,
  	425,5,73,0,0,425,432,5,76,0,0,426,427,5,85,0,0,427,428,5,110,0,0,428,
  	429,5,116,0,0,429,430,5,105,0,0,430,432,5,108,0,0,431,421,1,0,0,0,431,
  	426,1,0,0,0,432,40,1,0,0,0,433,434,5,87,0,0,434,435,5,73,0,0,435,436,
  	5,84,0,0,436,442,5,72,0,0,437,438,5,87,0,0,438,439,5,105,0,0,439,440,
  	5,116,0,0,440,442,5,104,0,0,441,433,1,0,0,0,441,437,1,0,0,0,442,42,1,
  	0,0,0,443,444,5,87,0,0,444,445,5,72,0,0,445,446,5,73,0,0,446,447,5,76,
  	0,0,447,454,5,69,0,0,448,449,5,87,0,0,449,450,5,104,0,0,450,451,5,105,
  	0,0,451,452,5,108,0,0,452,454,5,101,0,0,453,443,1,0,0,0,453,448,1,0,0,
  	0,454,44,1,0,0,0,455,456,5,68,0,0,456,457,5,69,0,0,457,458,5,70,0,0,458,
  	459,5,82,0,0,459,460,5,69,0,0,460,461,5,67,0,0,461,462,5,79,0,0,462,463,
  	5,82,0,0,463,474,5,68,0,0,464,465,5,68,0,0,465,466,5,101,0,0,466,467,
  	5,102,0,0,467,468,5,82,0,0,468,469,5,101,0,0,469,470,5,99,0,0,470,471,
  	5,111,0,0,471,472,5,114,0,0,472,474,5,100,0,0,473,455,1,0,0,0,473,464,
  	1,0,0,0,474,46,1,0,0,0,475,476,5,82,0,0,476,477,5,69,0,0,477,478,5,67,
  	0,0,478,479,5,79,0,0,479,480,5,82,0,0,480,488,5,68,0,0,481,482,5,82,0,
  	0,482,483,5,101,0,0,483,484,5,99,0,0,484,485,5,111,0,0,485,486,5,114,
  	0,0,486,488,5,100,0,0,487,475,1,0,0,0,487,481,1,0,0,0,488,48,1,0,0,0,
  	489,490,5,69,0,0,490,491,5,78,0,0,491,492,5,68,0,0,492,493,5,82,0,0,493,
  	494,5,69,0,0,494,495,5,67,0,0,495,496,5,79,0,0,496,497,5,82,0,0,497,508,
  	5,68,0,0,498,499,5,69,0,0,499,500,5,110,0,0,500,501,5,100,0,0,501,502,
  	5,82,0,0,502,503,5,101,0,0,503,504,5,99,0,0,504,505,5,111,0,0,505,506,
  	5,114,0,0,506,508,5,100,0,0,507,489,1,0,0,0,507,498,1,0,0,0,508,50,1,
  	0,0,0,509,510,5,72,0,0,510,511,5,80,0,0,511,512,5,84,0,0,512,513,5,73,
  	0,0,513,514,5,77,0,0,514,522,5,69,0,0,515,516,5,72,0,0,516,517,5,80,0,
  	0,517,518,5,84,0,0,518,519,5,105,0,0,519,520,5,109,0,0,520,522,5,101,
  	0,0,521,509,1,0,0,0,521,515,1,0,0,0,522,52,1,0,0,0,523,524,5,84,0,0,524,
  	525,5,73,0,0,525,526,5,77,0,0,526,532,5,69,0,0,527,528,5,84,0,0,528,529,
  	5,105,0,0,529,530,5,109,0,0,530,532,5,101,0,0,531,523,1,0,0,0,531,527,
  	1,0,0,0,532,54,1,0,0,0,533,534,5,84,0,0,534,535,5,73,0,0,535,536,5,77,
  	0,0,536,537,5,69,0,0,537,544,5,36,0,0,538,539,5,84,0,0,539,540,5,105,
  	0,0,540,541,5,109,0,0,541,542,5,101,0,0,542,544,5,36,0,0,543,533,1,0,
  	0,0,543,538,1,0,0,0,544,56,1,0,0,0,545,546,5,65,0,0,546,547,5,66,0,0,
  	547,552,5,83,0,0,548,549,5,65,0,0,549,550,5,98,0,0,550,552,5,115,0,0,
  	551,545,1,0,0,0,551,548,1,0,0,0,552,58,1,0,0,0,553,554,5,65,0,0,554,555,
  	5,67,0,0,555,560,5,83,0,0,556,557,5,65,0,0,557,558,5,99,0,0,558,560,5,
  	115,0,0,559,553,1,0,0,0,559,556,1,0,0,0,560,60,1,0,0,0,561,562,5,65,0,
  	0,562,563,5,83,0,0,563,568,5,78,0,0,564,565,5,65,0,0,565,566,5,115,0,
  	0,566,568,5,110,0,0,567,561,1,0,0,0,567,564,1,0,0,0,568,62,1,0,0,0,569,
  	570,5,65,0,0,570,571,5,84,0,0,571,576,5,78,0,0,572,573,5,65,0,0,573,574,
  	5,116,0,0,574,576,5,110,0,0,575,569,1,0,0,0,575,572,1,0,0,0,576,64,1,
  	0,0,0,577,578,5,67,0,0,578,579,5,79,0,0,579,584,5,83,0,0,580,581,5,67,
  	0,0,581,582,5,111,0,0,582,584,5,115,0,0,583,577,1,0,0,0,583,580,1,0,0,
  	0,584,66,1,0,0,0,585,586,5,68,0,0,586,587,5,69,0,0,587,592,5,71,0,0,588,
  	589,5,68,0,0,589,590,5,101,0,0,590,592,5,103,0,0,591,585,1,0,0,0,591,
  	588,1,0,0,0,592,68,1,0,0,0,593,594,5,69,0,0,594,595,5,88,0,0,595,600,
  	5,80,0,0,596,597,5,69,0,0,597,598,5,120,0,0,598,600,5,112,0,0,599,593,
  	1,0,0,0,599,596,1,0,0,0,600,70,1,0,0,0,601,602,5,70,0,0,602,603,5,76,
  	0,0,603,604,5,79,0,0,604,605,5,79,0,0,605,612,5,82,0,0,606,607,5,70,0,
  	0,607,608,5,108,0,0,608,609,5,111,0,0,609,610,5,111,0,0,610,612,5,114,
  	0,0,611,601,1,0,0,0,611,606,1,0,0,0,612,72,1,0,0,0,613,614,5,76,0,0,614,
  	615,5,69,0,0,615,620,5,84,0,0,616,617,5,76,0,0,617,618,5,101,0,0,618,
  	620,5,116,0,0,619,613,1,0,0,0,619,616,1,0,0,0,620,74,1,0,0,0,621,622,
  	5,76,0,0,622,626,5,78,0,0,623,624,5,76,0,0,624,626,5,110,0,0,625,621,
  	1,0,0,0,625,623,1,0,0,0,626,76,1,0,0,0,627,628,5,76,0,0,628,629,5,79,
  	0,0,629,634,5,71,0,0,630,631,5,76,0,0,631,632,5,111,0,0,632,634,5,103,
  	0,0,633,627,1,0,0,0,633,630,1,0,0,0,634,78,1,0,0,0,635,636,5,80,0,0,636,
  	640,5,73,0,0,637,638,5,80,0,0,638,640,5,105,0,0,639,635,1,0,0,0,639,637,
  	1,0,0,0,640,80,1,0,0,0,641,642,5,82,0,0,642,643,5,65,0,0,643,648,5,68,
  	0,0,644,645,5,82,0,0,645,646,5,97,0,0,646,648,5,100,0,0,647,641,1,0,0,
  	0,647,644,1,0,0,0,648,82,1,0,0,0,649,650,5,82,0,0,650,651,5,79,0,0,651,
  	652,5,85,0,0,652,653,5,78,0,0,653,660,5,68,0,0,654,655,5,82,0,0,655,656,
  	5,111,0,0,656,657,5,117,0,0,657,658,5,110,0,0,658,660,5,100,0,0,659,649,
  	1,0,0,0,659,654,1,0,0,0,660,84,1,0,0,0,661,662,5,83,0,0,662,663,5,71,
  	0,0,663,668,5,78,0,0,664,665,5,83,0,0,665,666,5,103,0,0,666,668,5,110,
  	0,0,667,661,1,0,0,0,667,664,1,0,0,0,668,86,1,0,0,0,669,670,5,83,0,0,670,
  	671,5,73,0,0,671,676,5,78,0,0,672,673,5,83,0,0,673,674,5,105,0,0,674,
  	676,5,110,0,0,675,669,1,0,0,0,675,672,1,0,0,0,676,88,1,0,0,0,677,678,
  	5,83,0,0,678,679,5,81,0,0,679,684,5,82,0,0,680,681,5,83,0,0,681,682,5,
  	113,0,0,682,684,5,114,0,0,683,677,1,0,0,0,683,680,1,0,0,0,684,90,1,0,
  	0,0,685,686,5,84,0,0,686,687,5,65,0,0,687,692,5,78,0,0,688,689,5,84,0,
  	0,689,690,5,97,0,0,690,692,5,110,0,0,691,685,1,0,0,0,691,688,1,0,0,0,
  	692,92,1,0,0,0,693,694,5,70,0,0,694,695,5,65,0,0,695,696,5,76,0,0,696,
  	697,5,83,0,0,697,704,5,69,0,0,698,699,5,70,0,0,699,700,5,97,0,0,700,701,
  	5,108,0,0,701,702,5,115,0,0,702,704,5,101,0,0,703,693,1,0,0,0,703,698,
  	1,0,0,0,704,94,1,0,0,0,705,706,5,84,0,0,706,707,5,82,0,0,707,708,5,85,
  	0,0,708,714,5,69,0,0,709,710,5,84,0,0,710,711,5,114,0,0,711,712,5,117,
  	0,0,712,714,5,101,0,0,713,705,1,0,0,0,713,709,1,0,0,0,714,96,1,0,0,0,
  	715,716,5,65,0,0,716,717,5,83,0,0,717,722,5,67,0,0,718,719,5,65,0,0,719,
  	720,5,115,0,0,720,722,5,99,0,0,721,715,1,0,0,0,721,718,1,0,0,0,722,98,
  	1,0,0,0,723,724,5,67,0,0,724,725,5,72,0,0,725,726,5,82,0,0,726,732,5,
  	36,0,0,727,728,5,67,0,0,728,729,5,104,0,0,729,730,5,114,0,0,730,732,5,
  	36,0,0,731,723,1,0,0,0,731,727,1,0,0,0,732,100,1,0,0,0,733,734,5,73,0,
  	0,734,735,5,78,0,0,735,736,5,83,0,0,736,737,5,84,0,0,737,744,5,82,0,0,
  	738,739,5,73,0,0,739,740,5,110,0,0,740,741,5,115,0,0,741,742,5,116,0,
  	0,742,744,5,114,0,0,743,733,1,0,0,0,743,738,1,0,0,0,744,102,1,0,0,0,745,
  	746,5,76,0,0,746,747,5,69,0,0,747,748,5,70,0,0,748,749,5,84,0,0,749,756,
  	5,36,0,0,750,751,5,76,0,0,751,752,5,101,0,0,752,753,5,102,0,0,753,754,
  	5,116,0,0,754,756,5,36,0,0,755,745,1,0,0,0,755,750,1,0,0,0,756,104,1,
  	0,0,0,757,758,5,77,0,0,758,759,5,73,0,0,759,760,5,68,0,0,760,766,5,36,
  	0,0,761,762,5,77,0,0,762,763,5,105,0,0,763,764,5,100,0,0,764,766,5,36,
  	0,0,765,757,1,0,0,0,765,761,1,0,0,0,766,106,1,0,0,0,767,768,5,82,0,0,
  	768,769,5,73,0,0,769,770,5,71,0,0,770,771,5,72,0,0,771,772,5,84,0,0,772,
  	780,5,36,0,0,773,774,5,82,0,0,774,775,5,105,0,0,775,776,5,103,0,0,776,
  	777,5,104,0,0,777,778,5,116,0,0,778,780,5,36,0,0,779,767,1,0,0,0,779,
  	773,1,0,0,0,780,108,1,0,0,0,781,782,5,76,0,0,782,783,5,69,0,0,783,788,
  	5,78,0,0,784,785,5,76,0,0,785,786,5,101,0,0,786,788,5,110,0,0,787,781,
  	1,0,0,0,787,784,1,0,0,0,788,110,1,0,0,0,789,790,5,66,0,0,790,791,5,89,
  	0,0,791,792,5,84,0,0,792,798,5,69,0,0,793,794,5,66,0,0,794,795,5,121,
  	0,0,795,796,5,116,0,0,796,798,5,101,0,0,797,789,1,0,0,0,797,793,1,0,0,
  	0,798,112,1,0,0,0,799,800,5,73,0,0,800,801,5,78,0,0,801,806,5,84,0,0,
  	802,803,5,73,0,0,803,804,5,110,0,0,804,806,5,116,0,0,805,799,1,0,0,0,
  	805,802,1,0,0,0,806,114,1,0,0,0,807,808,5,70,0,0,808,809,5,76,0,0,809,
  	810,5,79,0,0,810,811,5,65,0,0,811,818,5,84,0,0,812,813,5,70,0,0,813,814,
  	5,108,0,0,814,815,5,111,0,0,815,816,5,97,0,0,816,818,5,116,0,0,817,807,
  	1,0,0,0,817,812,1,0,0,0,818,116,1,0,0,0,819,820,5,83,0,0,820,821,5,84,
  	0,0,821,822,5,82,0,0,822,823,5,73,0,0,823,824,5,78,0,0,824,832,5,71,0,
  	0,825,826,5,83,0,0,826,827,5,116,0,0,827,828,5,114,0,0,828,829,5,105,
  	0,0,829,830,5,110,0,0,830,832,5,103,0,0,831,819,1,0,0,0,831,825,1,0,0,
  	0,832,118,1,0,0,0,833,834,5,36,0,0,834,120,1,0,0,0,835,836,5,35,0,0,836,
  	122,1,0,0,0,837,838,5,58,0,0,838,124,1,0,0,0,839,840,5,59,0,0,840,126,
  	1,0,0,0,841,842,5,46,0,0,842,128,1,0,0,0,843,844,5,44,0,0,844,130,1,0,
  	0,0,845,846,5,39,0,0,846,132,1,0,0,0,847,849,5,10,0,0,848,847,1,0,0,0,
  	849,850,1,0,0,0,850,848,1,0,0,0,850,851,1,0,0,0,851,134,1,0,0,0,852,853,
  	5,37,0,0,853,136,1,0,0,0,854,855,5,95,0,0,855,138,1,0,0,0,856,857,5,40,
  	0,0,857,140,1,0,0,0,858,859,5,41,0,0,859,142,1,0,0,0,860,861,5,91,0,0,
  	861,144,1,0,0,0,862,863,5,93,0,0,863,146,1,0,0,0,864,865,5,61,0,0,865,
  	148,1,0,0,0,866,867,5,60,0,0,867,868,5,62,0,0,868,150,1,0,0,0,869,870,
  	5,62,0,0,870,152,1,0,0,0,871,872,5,62,0,0,872,873,5,61,0,0,873,154,1,
  	0,0,0,874,875,5,60,0,0,875,156,1,0,0,0,876,877,5,60,0,0,877,878,5,61,
  	0,0,878,158,1,0,0,0,879,880,5,94,0,0,880,160,1,0,0,0,881,882,5,43,0,0,
  	882,162,1,0,0,0,883,884,5,45,0,0,884,164,1,0,0,0,885,886,5,42,0,0,886,
  	166,1,0,0,0,887,888,5,47,0,0,888,168,1,0,0,0,889,890,5,60,0,0,890,891,
  	5,60,0,0,891,170,1,0,0,0,892,893,5,62,0,0,893,894,5,62,0,0,894,172,1,
  	0,0,0,895,896,5,77,0,0,896,897,5,79,0,0,897,902,5,68,0,0,898,899,5,77,
  	0,0,899,900,5,111,0,0,900,902,5,100,0,0,901,895,1,0,0,0,901,898,1,0,0,
  	0,902,174,1,0,0,0,903,904,5,68,0,0,904,905,5,73,0,0,905,912,5,86,0,0,
  	906,907,5,68,0,0,907,908,5,105,0,0,908,912,5,118,0,0,909,910,5,47,0,0,
  	910,912,5,47,0,0,911,903,1,0,0,0,911,906,1,0,0,0,911,909,1,0,0,0,912,
  	176,1,0,0,0,913,914,5,126,0,0,914,178,1,0,0,0,915,916,5,78,0,0,916,917,
  	5,79,0,0,917,922,5,84,0,0,918,919,5,78,0,0,919,920,5,111,0,0,920,922,
  	5,116,0,0,921,915,1,0,0,0,921,918,1,0,0,0,922,180,1,0,0,0,923,924,5,65,
  	0,0,924,925,5,78,0,0,925,930,5,68,0,0,926,927,5,65,0,0,927,928,5,110,
  	0,0,928,930,5,100,0,0,929,923,1,0,0,0,929,926,1,0,0,0,930,182,1,0,0,0,
  	931,932,5,79,0,0,932,936,5,82,0,0,933,934,5,79,0,0,934,936,5,114,0,0,
  	935,931,1,0,0,0,935,933,1,0,0,0,936,184,1,0,0,0,937,938,5,69,0,0,938,
  	939,5,79,0,0,939,944,5,82,0,0,940,941,5,69,0,0,941,942,5,111,0,0,942,
  	944,5,114,0,0,943,937,1,0,0,0,943,940,1,0,0,0,944,186,1,0,0,0,945,949,
  	5,34,0,0,946,948,8,1,0,0,947,946,1,0,0,0,948,951,1,0,0,0,949,947,1,0,
  	0,0,949,950,1,0,0,0,950,952,1,0,0,0,951,949,1,0,0,0,952,953,5,34,0,0,
  	953,188,1,0,0,0,954,956,5,38,0,0,955,957,3,199,99,0,956,955,1,0,0,0,957,
  	958,1,0,0,0,958,956,1,0,0,0,958,959,1,0,0,0,959,190,1,0,0,0,960,962,3,
  	135,67,0,961,963,7,2,0,0,962,961,1,0,0,0,963,964,1,0,0,0,964,962,1,0,
  	0,0,964,965,1,0,0,0,965,192,1,0,0,0,966,968,3,205,102,0,967,966,1,0,0,
  	0,968,969,1,0,0,0,969,967,1,0,0,0,969,970,1,0,0,0,970,971,1,0,0,0,971,
  	973,5,46,0,0,972,974,3,205,102,0,973,972,1,0,0,0,974,975,1,0,0,0,975,
  	973,1,0,0,0,975,976,1,0,0,0,976,985,1,0,0,0,977,979,7,3,0,0,978,980,7,
  	4,0,0,979,978,1,0,0,0,980,981,1,0,0,0,981,979,1,0,0,0,981,982,1,0,0,0,
  	982,984,1,0,0,0,983,977,1,0,0,0,984,987,1,0,0,0,985,983,1,0,0,0,985,986,
  	1,0,0,0,986,194,1,0,0,0,987,985,1,0,0,0,988,990,3,205,102,0,989,988,1,
  	0,0,0,990,991,1,0,0,0,991,989,1,0,0,0,991,992,1,0,0,0,992,196,1,0,0,0,
  	993,994,3,201,100,0,994,198,1,0,0,0,995,996,7,5,0,0,996,200,1,0,0,0,997,
  	1003,3,203,101,0,998,1002,3,203,101,0,999,1002,3,205,102,0,1000,1002,
  	3,137,68,0,1001,998,1,0,0,0,1001,999,1,0,0,0,1001,1000,1,0,0,0,1002,1005,
  	1,0,0,0,1003,1001,1,0,0,0,1003,1004,1,0,0,0,1004,1009,1,0,0,0,1005,1003,
  	1,0,0,0,1006,1010,3,135,67,0,1007,1010,3,119,59,0,1008,1010,3,121,60,
  	0,1009,1006,1,0,0,0,1009,1007,1,0,0,0,1009,1008,1,0,0,0,1009,1010,1,0,
  	0,0,1010,202,1,0,0,0,1011,1012,7,6,0,0,1012,204,1,0,0,0,1013,1014,7,4,
  	0,0,1014,206,1,0,0,0,1015,1017,7,7,0,0,1016,1015,1,0,0,0,1017,1018,1,
  	0,0,0,1018,1016,1,0,0,0,1018,1019,1,0,0,0,1019,1020,1,0,0,0,1020,1021,
  	6,103,0,0,1021,208,1,0,0,0,80,0,212,217,230,238,246,256,264,278,290,308,
  	314,328,334,346,362,370,384,398,408,419,431,441,453,473,487,507,521,531,
  	543,551,559,567,575,583,591,599,611,619,625,633,639,647,659,667,675,683,
  	691,703,713,721,731,743,755,765,779,787,797,805,817,831,850,901,911,921,
  	929,935,943,949,958,964,969,975,981,985,991,1001,1003,1009,1018,1,0,1,
  	0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  dariclexerLexerStaticData = staticData.release();
}

}

DaricLexer::DaricLexer(CharStream *input) : Lexer(input) {
  DaricLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *dariclexerLexerStaticData->atn, dariclexerLexerStaticData->decisionToDFA, dariclexerLexerStaticData->sharedContextCache);
}

DaricLexer::~DaricLexer() {
  delete _interpreter;
}

std::string DaricLexer::getGrammarFileName() const {
  return "Daric.g4";
}

const std::vector<std::string>& DaricLexer::getRuleNames() const {
  return dariclexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& DaricLexer::getChannelNames() const {
  return dariclexerLexerStaticData->channelNames;
}

const std::vector<std::string>& DaricLexer::getModeNames() const {
  return dariclexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& DaricLexer::getVocabulary() const {
  return dariclexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView DaricLexer::getSerializedATN() const {
  return dariclexerLexerStaticData->serializedATN;
}

const atn::ATN& DaricLexer::getATN() const {
  return *dariclexerLexerStaticData->atn;
}




void DaricLexer::initialize() {
  ::antlr4::internal::call_once(dariclexerLexerOnceFlag, dariclexerLexerInitialize);
}
