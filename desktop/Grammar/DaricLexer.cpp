
// Generated from Daric.g4 by ANTLR 4.11.1


#include "DaricLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct DaricLexerStaticData final {
  DaricLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  DaricLexerStaticData(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData(DaricLexerStaticData&&) = delete;
  DaricLexerStaticData& operator=(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData& operator=(DaricLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag dariclexerLexerOnceFlag;
DaricLexerStaticData *dariclexerLexerStaticData = nullptr;

void dariclexerLexerInitialize() {
  assert(dariclexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<DaricLexerStaticData>(
    std::vector<std::string>{
      "BlockComment", "LineComment", "CASE", "CONST", "DATA", "DATALABEL", 
      "DEF", "DIM", "ELSE", "END", "FOR", "IF", "IMPORT", "INPUT", "LET", 
      "NEXT", "OF", "OPTION", "OTHERWISE", "PRINT", "READ", "RECORD", "REF", 
      "REM", "REPEAT", "RESTORE", "RETURN", "THEN", "SIZE", "STEP", "SYS", 
      "SWAP", "TO", "UNTIL", "WHEN", "WITH", "WHILE", "MAIN", "ABS", "ACS", 
      "ASN", "ATN", "COS", "DEG", "EXP", "FLOOR", "LN", "LOG", "PI", "RAD", 
      "ROUND", "SGN", "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHR", 
      "INSTR", "LEFT", "MID", "RIGHT", "LEN", "BYTE", "INT", "FLOAT", "STRING", 
      "DOLLAR", "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "HEX", "NAME", "ALPHA", "DIGIT", "WS"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "'$'", "'#'", "':'", "';'", "'.'", "','", "'''", "", "'%'", "'_'", 
      "'('", "')'", "'['", "']'", "'='", "'<>'", "'>'", "'>='", "'<'", "'<='", 
      "'^'", "'+'", "'-'", "'*'", "'/'", "'<<'", "'>>'", "", "", "'~'"
    },
    std::vector<std::string>{
      "", "BlockComment", "LineComment", "CASE", "CONST", "DATA", "DATALABEL", 
      "DEF", "DIM", "ELSE", "END", "FOR", "IF", "IMPORT", "INPUT", "LET", 
      "NEXT", "OF", "OPTION", "OTHERWISE", "PRINT", "READ", "RECORD", "REF", 
      "REM", "REPEAT", "RESTORE", "RETURN", "THEN", "SIZE", "STEP", "SYS", 
      "SWAP", "TO", "UNTIL", "WHEN", "WITH", "WHILE", "MAIN", "ABS", "ACS", 
      "ASN", "ATN", "COS", "DEG", "EXP", "FLOOR", "LN", "LOG", "PI", "RAD", 
      "ROUND", "SGN", "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHR", 
      "INSTR", "LEFT", "MID", "RIGHT", "LEN", "BYTE", "INT", "FLOAT", "STRING", 
      "DOLLAR", "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "WS"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,109,1109,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,2,111,7,111,2,112,7,112,1,0,1,0,1,0,1,0,5,0,232,8,0,10,0,12,0,235,
  	9,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,3,1,244,8,1,1,1,5,1,247,8,1,10,1,12,1,
  	250,9,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,262,8,2,1,3,1,3,1,
  	3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,274,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
  	1,4,3,4,284,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
  	5,1,5,1,5,1,5,1,5,3,5,304,8,5,1,6,1,6,1,6,1,6,1,6,1,6,3,6,312,8,6,1,7,
  	1,7,1,7,1,7,1,7,1,7,3,7,320,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,330,
  	8,8,1,9,1,9,1,9,1,9,1,9,1,9,3,9,338,8,9,1,10,1,10,1,10,1,10,1,10,1,10,
  	3,10,346,8,10,1,11,1,11,1,11,1,11,3,11,352,8,11,1,12,1,12,1,12,1,12,1,
  	12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,366,8,12,1,13,1,13,1,13,1,
  	13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,378,8,13,1,14,1,14,1,14,1,14,1,
  	14,1,14,3,14,386,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,396,
  	8,15,1,16,1,16,1,16,1,16,3,16,402,8,16,1,17,1,17,1,17,1,17,1,17,1,17,
  	1,17,1,17,1,17,1,17,1,17,1,17,3,17,416,8,17,1,18,1,18,1,18,1,18,1,18,
  	1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,
  	436,8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,448,8,
  	19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,458,8,20,1,21,1,21,1,
  	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,472,8,21,1,22,1,
  	22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,484,8,22,1,23,1,23,1,
  	23,1,23,1,23,1,23,3,23,492,8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
  	24,1,24,1,24,1,24,1,24,3,24,506,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
  	25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,522,8,25,1,26,1,26,1,26,1,
  	26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,536,8,26,1,27,1,27,1,
  	27,1,27,1,27,1,27,1,27,1,27,3,27,546,8,27,1,28,1,28,1,28,1,28,1,28,1,
  	28,1,28,1,28,3,28,556,8,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,
  	29,566,8,29,1,30,1,30,1,30,1,30,1,30,1,30,3,30,574,8,30,1,31,1,31,1,31,
  	1,31,1,31,1,31,1,31,1,31,1,31,3,31,585,8,31,1,32,1,32,1,32,1,32,3,32,
  	591,8,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,603,8,
  	33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,613,8,34,1,35,1,35,1,
  	35,1,35,1,35,1,35,1,35,1,35,3,35,623,8,35,1,36,1,36,1,36,1,36,1,36,1,
  	36,1,36,1,36,1,36,1,36,3,36,635,8,36,1,37,1,37,1,37,1,37,1,37,1,37,1,
  	37,1,37,1,37,1,37,3,37,647,8,37,1,38,1,38,1,38,1,38,1,38,1,38,3,38,655,
  	8,38,1,39,1,39,1,39,1,39,1,39,1,39,3,39,663,8,39,1,40,1,40,1,40,1,40,
  	1,40,1,40,3,40,671,8,40,1,41,1,41,1,41,1,41,1,41,1,41,3,41,679,8,41,1,
  	42,1,42,1,42,1,42,1,42,1,42,3,42,687,8,42,1,43,1,43,1,43,1,43,1,43,1,
  	43,3,43,695,8,43,1,44,1,44,1,44,1,44,1,44,1,44,3,44,703,8,44,1,45,1,45,
  	1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,715,8,45,1,46,1,46,1,46,
  	1,46,3,46,721,8,46,1,47,1,47,1,47,1,47,1,47,1,47,3,47,729,8,47,1,48,1,
  	48,1,48,1,48,3,48,735,8,48,1,49,1,49,1,49,1,49,1,49,1,49,3,49,743,8,49,
  	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,755,8,50,1,51,
  	1,51,1,51,1,51,1,51,1,51,3,51,763,8,51,1,52,1,52,1,52,1,52,1,52,1,52,
  	3,52,771,8,52,1,53,1,53,1,53,1,53,1,53,1,53,3,53,779,8,53,1,54,1,54,1,
  	54,1,54,1,54,1,54,3,54,787,8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
  	55,1,55,1,55,3,55,799,8,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,
  	56,809,8,56,1,57,1,57,1,57,1,57,1,57,1,57,3,57,817,8,57,1,58,1,58,1,58,
  	1,58,1,58,1,58,3,58,825,8,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
  	1,59,1,59,3,59,837,8,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,3,60,
  	847,8,60,1,61,1,61,1,61,1,61,1,61,1,61,3,61,855,8,61,1,62,1,62,1,62,1,
  	62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,867,8,62,1,63,1,63,1,63,1,63,1,
  	63,1,63,3,63,875,8,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,3,64,885,
  	8,64,1,65,1,65,1,65,1,65,1,65,1,65,3,65,893,8,65,1,66,1,66,1,66,1,66,
  	1,66,1,66,1,66,1,66,1,66,1,66,3,66,905,8,66,1,67,1,67,1,67,1,67,1,67,
  	1,67,1,67,1,67,1,67,1,67,1,67,1,67,3,67,919,8,67,1,68,1,68,1,69,1,69,
  	1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,4,75,936,8,75,
  	11,75,12,75,937,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,
  	1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,87,
  	1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,
  	1,93,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,3,95,989,8,95,1,96,
  	1,96,1,96,1,96,1,96,1,96,1,96,1,96,3,96,999,8,96,1,97,1,97,1,98,1,98,
  	1,98,1,98,1,98,1,98,3,98,1009,8,98,1,99,1,99,1,99,1,99,1,99,1,99,3,99,
  	1017,8,99,1,100,1,100,1,100,1,100,3,100,1023,8,100,1,101,1,101,1,101,
  	1,101,1,101,1,101,3,101,1031,8,101,1,102,1,102,5,102,1035,8,102,10,102,
  	12,102,1038,9,102,1,102,1,102,1,103,1,103,4,103,1044,8,103,11,103,12,
  	103,1045,1,104,1,104,4,104,1050,8,104,11,104,12,104,1051,1,105,4,105,
  	1055,8,105,11,105,12,105,1056,1,105,1,105,4,105,1061,8,105,11,105,12,
  	105,1062,1,105,1,105,4,105,1067,8,105,11,105,12,105,1068,5,105,1071,8,
  	105,10,105,12,105,1074,9,105,1,106,4,106,1077,8,106,11,106,12,106,1078,
  	1,107,1,107,1,108,1,108,1,109,1,109,1,109,1,109,5,109,1089,8,109,10,109,
  	12,109,1092,9,109,1,109,1,109,1,109,3,109,1097,8,109,1,110,1,110,1,111,
  	1,111,1,112,4,112,1104,8,112,11,112,12,112,1105,1,112,1,112,1,233,0,113,
  	1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
  	29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
  	26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
  	75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
  	49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,
  	59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
  	69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,
  	79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,
  	89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,
  	99,199,100,201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,
  	108,217,0,219,0,221,0,223,0,225,109,1,0,8,2,0,10,10,13,13,3,0,10,10,13,
  	13,34,34,2,0,48,49,124,124,3,0,69,69,101,101,124,124,1,0,48,57,3,0,48,
  	57,65,70,97,102,2,0,65,90,97,122,3,0,9,9,13,13,32,32,1196,0,1,1,0,0,0,
  	0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
  	0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
  	0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
  	1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,
  	0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
  	0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
  	1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
  	0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
  	0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
  	1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
  	1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,
  	1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
  	1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,
  	1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,
  	1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,
  	1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,
  	1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,
  	1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,
  	1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,
  	1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,
  	1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,225,1,0,0,0,1,227,
  	1,0,0,0,3,243,1,0,0,0,5,261,1,0,0,0,7,273,1,0,0,0,9,283,1,0,0,0,11,303,
  	1,0,0,0,13,311,1,0,0,0,15,319,1,0,0,0,17,329,1,0,0,0,19,337,1,0,0,0,21,
  	345,1,0,0,0,23,351,1,0,0,0,25,365,1,0,0,0,27,377,1,0,0,0,29,385,1,0,0,
  	0,31,395,1,0,0,0,33,401,1,0,0,0,35,415,1,0,0,0,37,435,1,0,0,0,39,447,
  	1,0,0,0,41,457,1,0,0,0,43,471,1,0,0,0,45,483,1,0,0,0,47,491,1,0,0,0,49,
  	505,1,0,0,0,51,521,1,0,0,0,53,535,1,0,0,0,55,545,1,0,0,0,57,555,1,0,0,
  	0,59,565,1,0,0,0,61,573,1,0,0,0,63,584,1,0,0,0,65,590,1,0,0,0,67,602,
  	1,0,0,0,69,612,1,0,0,0,71,622,1,0,0,0,73,634,1,0,0,0,75,646,1,0,0,0,77,
  	654,1,0,0,0,79,662,1,0,0,0,81,670,1,0,0,0,83,678,1,0,0,0,85,686,1,0,0,
  	0,87,694,1,0,0,0,89,702,1,0,0,0,91,714,1,0,0,0,93,720,1,0,0,0,95,728,
  	1,0,0,0,97,734,1,0,0,0,99,742,1,0,0,0,101,754,1,0,0,0,103,762,1,0,0,0,
  	105,770,1,0,0,0,107,778,1,0,0,0,109,786,1,0,0,0,111,798,1,0,0,0,113,808,
  	1,0,0,0,115,816,1,0,0,0,117,824,1,0,0,0,119,836,1,0,0,0,121,846,1,0,0,
  	0,123,854,1,0,0,0,125,866,1,0,0,0,127,874,1,0,0,0,129,884,1,0,0,0,131,
  	892,1,0,0,0,133,904,1,0,0,0,135,918,1,0,0,0,137,920,1,0,0,0,139,922,1,
  	0,0,0,141,924,1,0,0,0,143,926,1,0,0,0,145,928,1,0,0,0,147,930,1,0,0,0,
  	149,932,1,0,0,0,151,935,1,0,0,0,153,939,1,0,0,0,155,941,1,0,0,0,157,943,
  	1,0,0,0,159,945,1,0,0,0,161,947,1,0,0,0,163,949,1,0,0,0,165,951,1,0,0,
  	0,167,953,1,0,0,0,169,956,1,0,0,0,171,958,1,0,0,0,173,961,1,0,0,0,175,
  	963,1,0,0,0,177,966,1,0,0,0,179,968,1,0,0,0,181,970,1,0,0,0,183,972,1,
  	0,0,0,185,974,1,0,0,0,187,976,1,0,0,0,189,979,1,0,0,0,191,988,1,0,0,0,
  	193,998,1,0,0,0,195,1000,1,0,0,0,197,1008,1,0,0,0,199,1016,1,0,0,0,201,
  	1022,1,0,0,0,203,1030,1,0,0,0,205,1032,1,0,0,0,207,1041,1,0,0,0,209,1047,
  	1,0,0,0,211,1054,1,0,0,0,213,1076,1,0,0,0,215,1080,1,0,0,0,217,1082,1,
  	0,0,0,219,1084,1,0,0,0,221,1098,1,0,0,0,223,1100,1,0,0,0,225,1103,1,0,
  	0,0,227,228,5,35,0,0,228,229,5,123,0,0,229,233,1,0,0,0,230,232,9,0,0,
  	0,231,230,1,0,0,0,232,235,1,0,0,0,233,234,1,0,0,0,233,231,1,0,0,0,234,
  	236,1,0,0,0,235,233,1,0,0,0,236,237,5,125,0,0,237,238,5,35,0,0,238,239,
  	1,0,0,0,239,240,6,0,0,0,240,2,1,0,0,0,241,244,3,47,23,0,242,244,5,39,
  	0,0,243,241,1,0,0,0,243,242,1,0,0,0,244,248,1,0,0,0,245,247,8,0,0,0,246,
  	245,1,0,0,0,247,250,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,251,1,
  	0,0,0,250,248,1,0,0,0,251,252,6,1,0,0,252,4,1,0,0,0,253,254,5,67,0,0,
  	254,255,5,65,0,0,255,256,5,83,0,0,256,262,5,69,0,0,257,258,5,67,0,0,258,
  	259,5,97,0,0,259,260,5,115,0,0,260,262,5,101,0,0,261,253,1,0,0,0,261,
  	257,1,0,0,0,262,6,1,0,0,0,263,264,5,67,0,0,264,265,5,79,0,0,265,266,5,
  	78,0,0,266,267,5,83,0,0,267,274,5,84,0,0,268,269,5,67,0,0,269,270,5,111,
  	0,0,270,271,5,110,0,0,271,272,5,115,0,0,272,274,5,116,0,0,273,263,1,0,
  	0,0,273,268,1,0,0,0,274,8,1,0,0,0,275,276,5,68,0,0,276,277,5,65,0,0,277,
  	278,5,84,0,0,278,284,5,65,0,0,279,280,5,68,0,0,280,281,5,97,0,0,281,282,
  	5,116,0,0,282,284,5,97,0,0,283,275,1,0,0,0,283,279,1,0,0,0,284,10,1,0,
  	0,0,285,286,5,68,0,0,286,287,5,65,0,0,287,288,5,84,0,0,288,289,5,65,0,
  	0,289,290,5,76,0,0,290,291,5,65,0,0,291,292,5,66,0,0,292,293,5,69,0,0,
  	293,304,5,76,0,0,294,295,5,68,0,0,295,296,5,97,0,0,296,297,5,116,0,0,
  	297,298,5,97,0,0,298,299,5,76,0,0,299,300,5,97,0,0,300,301,5,98,0,0,301,
  	302,5,101,0,0,302,304,5,108,0,0,303,285,1,0,0,0,303,294,1,0,0,0,304,12,
  	1,0,0,0,305,306,5,68,0,0,306,307,5,69,0,0,307,312,5,70,0,0,308,309,5,
  	68,0,0,309,310,5,101,0,0,310,312,5,102,0,0,311,305,1,0,0,0,311,308,1,
  	0,0,0,312,14,1,0,0,0,313,314,5,68,0,0,314,315,5,73,0,0,315,320,5,77,0,
  	0,316,317,5,68,0,0,317,318,5,105,0,0,318,320,5,109,0,0,319,313,1,0,0,
  	0,319,316,1,0,0,0,320,16,1,0,0,0,321,322,5,69,0,0,322,323,5,76,0,0,323,
  	324,5,83,0,0,324,330,5,69,0,0,325,326,5,69,0,0,326,327,5,108,0,0,327,
  	328,5,115,0,0,328,330,5,101,0,0,329,321,1,0,0,0,329,325,1,0,0,0,330,18,
  	1,0,0,0,331,332,5,69,0,0,332,333,5,78,0,0,333,338,5,68,0,0,334,335,5,
  	69,0,0,335,336,5,110,0,0,336,338,5,100,0,0,337,331,1,0,0,0,337,334,1,
  	0,0,0,338,20,1,0,0,0,339,340,5,70,0,0,340,341,5,79,0,0,341,346,5,82,0,
  	0,342,343,5,70,0,0,343,344,5,111,0,0,344,346,5,114,0,0,345,339,1,0,0,
  	0,345,342,1,0,0,0,346,22,1,0,0,0,347,348,5,73,0,0,348,352,5,70,0,0,349,
  	350,5,73,0,0,350,352,5,102,0,0,351,347,1,0,0,0,351,349,1,0,0,0,352,24,
  	1,0,0,0,353,354,5,73,0,0,354,355,5,77,0,0,355,356,5,80,0,0,356,357,5,
  	79,0,0,357,358,5,82,0,0,358,366,5,84,0,0,359,360,5,73,0,0,360,361,5,109,
  	0,0,361,362,5,112,0,0,362,363,5,111,0,0,363,364,5,114,0,0,364,366,5,116,
  	0,0,365,353,1,0,0,0,365,359,1,0,0,0,366,26,1,0,0,0,367,368,5,73,0,0,368,
  	369,5,78,0,0,369,370,5,80,0,0,370,371,5,85,0,0,371,378,5,84,0,0,372,373,
  	5,73,0,0,373,374,5,110,0,0,374,375,5,112,0,0,375,376,5,117,0,0,376,378,
  	5,116,0,0,377,367,1,0,0,0,377,372,1,0,0,0,378,28,1,0,0,0,379,380,5,76,
  	0,0,380,381,5,69,0,0,381,386,5,84,0,0,382,383,5,76,0,0,383,384,5,101,
  	0,0,384,386,5,116,0,0,385,379,1,0,0,0,385,382,1,0,0,0,386,30,1,0,0,0,
  	387,388,5,78,0,0,388,389,5,69,0,0,389,390,5,88,0,0,390,396,5,84,0,0,391,
  	392,5,78,0,0,392,393,5,101,0,0,393,394,5,120,0,0,394,396,5,116,0,0,395,
  	387,1,0,0,0,395,391,1,0,0,0,396,32,1,0,0,0,397,398,5,79,0,0,398,402,5,
  	70,0,0,399,400,5,79,0,0,400,402,5,102,0,0,401,397,1,0,0,0,401,399,1,0,
  	0,0,402,34,1,0,0,0,403,404,5,79,0,0,404,405,5,80,0,0,405,406,5,84,0,0,
  	406,407,5,73,0,0,407,408,5,79,0,0,408,416,5,78,0,0,409,410,5,79,0,0,410,
  	411,5,112,0,0,411,412,5,116,0,0,412,413,5,105,0,0,413,414,5,111,0,0,414,
  	416,5,110,0,0,415,403,1,0,0,0,415,409,1,0,0,0,416,36,1,0,0,0,417,418,
  	5,79,0,0,418,419,5,84,0,0,419,420,5,72,0,0,420,421,5,69,0,0,421,422,5,
  	82,0,0,422,423,5,87,0,0,423,424,5,73,0,0,424,425,5,83,0,0,425,436,5,69,
  	0,0,426,427,5,79,0,0,427,428,5,116,0,0,428,429,5,104,0,0,429,430,5,101,
  	0,0,430,431,5,114,0,0,431,432,5,119,0,0,432,433,5,105,0,0,433,434,5,115,
  	0,0,434,436,5,101,0,0,435,417,1,0,0,0,435,426,1,0,0,0,436,38,1,0,0,0,
  	437,438,5,80,0,0,438,439,5,82,0,0,439,440,5,73,0,0,440,441,5,78,0,0,441,
  	448,5,84,0,0,442,443,5,80,0,0,443,444,5,114,0,0,444,445,5,105,0,0,445,
  	446,5,110,0,0,446,448,5,116,0,0,447,437,1,0,0,0,447,442,1,0,0,0,448,40,
  	1,0,0,0,449,450,5,82,0,0,450,451,5,69,0,0,451,452,5,65,0,0,452,458,5,
  	68,0,0,453,454,5,82,0,0,454,455,5,101,0,0,455,456,5,97,0,0,456,458,5,
  	100,0,0,457,449,1,0,0,0,457,453,1,0,0,0,458,42,1,0,0,0,459,460,5,82,0,
  	0,460,461,5,69,0,0,461,462,5,67,0,0,462,463,5,79,0,0,463,464,5,82,0,0,
  	464,472,5,68,0,0,465,466,5,82,0,0,466,467,5,101,0,0,467,468,5,99,0,0,
  	468,469,5,111,0,0,469,470,5,114,0,0,470,472,5,100,0,0,471,459,1,0,0,0,
  	471,465,1,0,0,0,472,44,1,0,0,0,473,474,5,66,0,0,474,475,5,89,0,0,475,
  	476,5,82,0,0,476,477,5,69,0,0,477,484,5,70,0,0,478,479,5,66,0,0,479,480,
  	5,121,0,0,480,481,5,82,0,0,481,482,5,101,0,0,482,484,5,102,0,0,483,473,
  	1,0,0,0,483,478,1,0,0,0,484,46,1,0,0,0,485,486,5,82,0,0,486,487,5,69,
  	0,0,487,492,5,77,0,0,488,489,5,82,0,0,489,490,5,101,0,0,490,492,5,109,
  	0,0,491,485,1,0,0,0,491,488,1,0,0,0,492,48,1,0,0,0,493,494,5,82,0,0,494,
  	495,5,69,0,0,495,496,5,80,0,0,496,497,5,69,0,0,497,498,5,65,0,0,498,506,
  	5,84,0,0,499,500,5,82,0,0,500,501,5,101,0,0,501,502,5,112,0,0,502,503,
  	5,101,0,0,503,504,5,97,0,0,504,506,5,116,0,0,505,493,1,0,0,0,505,499,
  	1,0,0,0,506,50,1,0,0,0,507,508,5,82,0,0,508,509,5,69,0,0,509,510,5,83,
  	0,0,510,511,5,84,0,0,511,512,5,79,0,0,512,513,5,82,0,0,513,522,5,69,0,
  	0,514,515,5,82,0,0,515,516,5,101,0,0,516,517,5,115,0,0,517,518,5,116,
  	0,0,518,519,5,111,0,0,519,520,5,114,0,0,520,522,5,101,0,0,521,507,1,0,
  	0,0,521,514,1,0,0,0,522,52,1,0,0,0,523,524,5,82,0,0,524,525,5,69,0,0,
  	525,526,5,84,0,0,526,527,5,85,0,0,527,528,5,82,0,0,528,536,5,78,0,0,529,
  	530,5,82,0,0,530,531,5,101,0,0,531,532,5,116,0,0,532,533,5,117,0,0,533,
  	534,5,114,0,0,534,536,5,110,0,0,535,523,1,0,0,0,535,529,1,0,0,0,536,54,
  	1,0,0,0,537,538,5,84,0,0,538,539,5,72,0,0,539,540,5,69,0,0,540,546,5,
  	78,0,0,541,542,5,84,0,0,542,543,5,104,0,0,543,544,5,101,0,0,544,546,5,
  	110,0,0,545,537,1,0,0,0,545,541,1,0,0,0,546,56,1,0,0,0,547,548,5,83,0,
  	0,548,549,5,73,0,0,549,550,5,90,0,0,550,556,5,69,0,0,551,552,5,83,0,0,
  	552,553,5,105,0,0,553,554,5,122,0,0,554,556,5,101,0,0,555,547,1,0,0,0,
  	555,551,1,0,0,0,556,58,1,0,0,0,557,558,5,83,0,0,558,559,5,84,0,0,559,
  	560,5,69,0,0,560,566,5,80,0,0,561,562,5,83,0,0,562,563,5,116,0,0,563,
  	564,5,101,0,0,564,566,5,112,0,0,565,557,1,0,0,0,565,561,1,0,0,0,566,60,
  	1,0,0,0,567,568,5,83,0,0,568,569,5,89,0,0,569,574,5,83,0,0,570,571,5,
  	83,0,0,571,572,5,121,0,0,572,574,5,115,0,0,573,567,1,0,0,0,573,570,1,
  	0,0,0,574,62,1,0,0,0,575,576,5,83,0,0,576,577,5,87,0,0,577,578,5,65,0,
  	0,578,585,5,80,0,0,579,580,5,83,0,0,580,581,5,119,0,0,581,582,5,97,0,
  	0,582,583,5,112,0,0,583,585,5,32,0,0,584,575,1,0,0,0,584,579,1,0,0,0,
  	585,64,1,0,0,0,586,587,5,84,0,0,587,591,5,79,0,0,588,589,5,84,0,0,589,
  	591,5,111,0,0,590,586,1,0,0,0,590,588,1,0,0,0,591,66,1,0,0,0,592,593,
  	5,85,0,0,593,594,5,78,0,0,594,595,5,84,0,0,595,596,5,73,0,0,596,603,5,
  	76,0,0,597,598,5,85,0,0,598,599,5,110,0,0,599,600,5,116,0,0,600,601,5,
  	105,0,0,601,603,5,108,0,0,602,592,1,0,0,0,602,597,1,0,0,0,603,68,1,0,
  	0,0,604,605,5,87,0,0,605,606,5,72,0,0,606,607,5,69,0,0,607,613,5,78,0,
  	0,608,609,5,87,0,0,609,610,5,104,0,0,610,611,5,101,0,0,611,613,5,110,
  	0,0,612,604,1,0,0,0,612,608,1,0,0,0,613,70,1,0,0,0,614,615,5,87,0,0,615,
  	616,5,73,0,0,616,617,5,84,0,0,617,623,5,72,0,0,618,619,5,87,0,0,619,620,
  	5,105,0,0,620,621,5,116,0,0,621,623,5,104,0,0,622,614,1,0,0,0,622,618,
  	1,0,0,0,623,72,1,0,0,0,624,625,5,87,0,0,625,626,5,72,0,0,626,627,5,73,
  	0,0,627,628,5,76,0,0,628,635,5,69,0,0,629,630,5,87,0,0,630,631,5,104,
  	0,0,631,632,5,105,0,0,632,633,5,108,0,0,633,635,5,101,0,0,634,624,1,0,
  	0,0,634,629,1,0,0,0,635,74,1,0,0,0,636,637,5,64,0,0,637,638,5,77,0,0,
  	638,639,5,65,0,0,639,640,5,73,0,0,640,647,5,78,0,0,641,642,5,64,0,0,642,
  	643,5,77,0,0,643,644,5,97,0,0,644,645,5,105,0,0,645,647,5,110,0,0,646,
  	636,1,0,0,0,646,641,1,0,0,0,647,76,1,0,0,0,648,649,5,65,0,0,649,650,5,
  	66,0,0,650,655,5,83,0,0,651,652,5,65,0,0,652,653,5,98,0,0,653,655,5,115,
  	0,0,654,648,1,0,0,0,654,651,1,0,0,0,655,78,1,0,0,0,656,657,5,65,0,0,657,
  	658,5,67,0,0,658,663,5,83,0,0,659,660,5,65,0,0,660,661,5,99,0,0,661,663,
  	5,115,0,0,662,656,1,0,0,0,662,659,1,0,0,0,663,80,1,0,0,0,664,665,5,65,
  	0,0,665,666,5,83,0,0,666,671,5,78,0,0,667,668,5,65,0,0,668,669,5,115,
  	0,0,669,671,5,110,0,0,670,664,1,0,0,0,670,667,1,0,0,0,671,82,1,0,0,0,
  	672,673,5,65,0,0,673,674,5,84,0,0,674,679,5,78,0,0,675,676,5,65,0,0,676,
  	677,5,116,0,0,677,679,5,110,0,0,678,672,1,0,0,0,678,675,1,0,0,0,679,84,
  	1,0,0,0,680,681,5,67,0,0,681,682,5,79,0,0,682,687,5,83,0,0,683,684,5,
  	67,0,0,684,685,5,111,0,0,685,687,5,115,0,0,686,680,1,0,0,0,686,683,1,
  	0,0,0,687,86,1,0,0,0,688,689,5,68,0,0,689,690,5,69,0,0,690,695,5,71,0,
  	0,691,692,5,68,0,0,692,693,5,101,0,0,693,695,5,103,0,0,694,688,1,0,0,
  	0,694,691,1,0,0,0,695,88,1,0,0,0,696,697,5,69,0,0,697,698,5,88,0,0,698,
  	703,5,80,0,0,699,700,5,69,0,0,700,701,5,120,0,0,701,703,5,112,0,0,702,
  	696,1,0,0,0,702,699,1,0,0,0,703,90,1,0,0,0,704,705,5,70,0,0,705,706,5,
  	76,0,0,706,707,5,79,0,0,707,708,5,79,0,0,708,715,5,82,0,0,709,710,5,70,
  	0,0,710,711,5,108,0,0,711,712,5,111,0,0,712,713,5,111,0,0,713,715,5,114,
  	0,0,714,704,1,0,0,0,714,709,1,0,0,0,715,92,1,0,0,0,716,717,5,76,0,0,717,
  	721,5,78,0,0,718,719,5,76,0,0,719,721,5,110,0,0,720,716,1,0,0,0,720,718,
  	1,0,0,0,721,94,1,0,0,0,722,723,5,76,0,0,723,724,5,79,0,0,724,729,5,71,
  	0,0,725,726,5,76,0,0,726,727,5,111,0,0,727,729,5,103,0,0,728,722,1,0,
  	0,0,728,725,1,0,0,0,729,96,1,0,0,0,730,731,5,80,0,0,731,735,5,73,0,0,
  	732,733,5,80,0,0,733,735,5,105,0,0,734,730,1,0,0,0,734,732,1,0,0,0,735,
  	98,1,0,0,0,736,737,5,82,0,0,737,738,5,65,0,0,738,743,5,68,0,0,739,740,
  	5,82,0,0,740,741,5,97,0,0,741,743,5,100,0,0,742,736,1,0,0,0,742,739,1,
  	0,0,0,743,100,1,0,0,0,744,745,5,82,0,0,745,746,5,79,0,0,746,747,5,85,
  	0,0,747,748,5,78,0,0,748,755,5,68,0,0,749,750,5,82,0,0,750,751,5,111,
  	0,0,751,752,5,117,0,0,752,753,5,110,0,0,753,755,5,100,0,0,754,744,1,0,
  	0,0,754,749,1,0,0,0,755,102,1,0,0,0,756,757,5,83,0,0,757,758,5,71,0,0,
  	758,763,5,78,0,0,759,760,5,83,0,0,760,761,5,103,0,0,761,763,5,110,0,0,
  	762,756,1,0,0,0,762,759,1,0,0,0,763,104,1,0,0,0,764,765,5,83,0,0,765,
  	766,5,73,0,0,766,771,5,78,0,0,767,768,5,83,0,0,768,769,5,105,0,0,769,
  	771,5,110,0,0,770,764,1,0,0,0,770,767,1,0,0,0,771,106,1,0,0,0,772,773,
  	5,83,0,0,773,774,5,81,0,0,774,779,5,82,0,0,775,776,5,83,0,0,776,777,5,
  	113,0,0,777,779,5,114,0,0,778,772,1,0,0,0,778,775,1,0,0,0,779,108,1,0,
  	0,0,780,781,5,84,0,0,781,782,5,65,0,0,782,787,5,78,0,0,783,784,5,84,0,
  	0,784,785,5,97,0,0,785,787,5,110,0,0,786,780,1,0,0,0,786,783,1,0,0,0,
  	787,110,1,0,0,0,788,789,5,70,0,0,789,790,5,65,0,0,790,791,5,76,0,0,791,
  	792,5,83,0,0,792,799,5,69,0,0,793,794,5,70,0,0,794,795,5,97,0,0,795,796,
  	5,108,0,0,796,797,5,115,0,0,797,799,5,101,0,0,798,788,1,0,0,0,798,793,
  	1,0,0,0,799,112,1,0,0,0,800,801,5,84,0,0,801,802,5,82,0,0,802,803,5,85,
  	0,0,803,809,5,69,0,0,804,805,5,84,0,0,805,806,5,114,0,0,806,807,5,117,
  	0,0,807,809,5,101,0,0,808,800,1,0,0,0,808,804,1,0,0,0,809,114,1,0,0,0,
  	810,811,5,65,0,0,811,812,5,83,0,0,812,817,5,67,0,0,813,814,5,65,0,0,814,
  	815,5,115,0,0,815,817,5,99,0,0,816,810,1,0,0,0,816,813,1,0,0,0,817,116,
  	1,0,0,0,818,819,5,67,0,0,819,820,5,72,0,0,820,825,5,82,0,0,821,822,5,
  	67,0,0,822,823,5,104,0,0,823,825,5,114,0,0,824,818,1,0,0,0,824,821,1,
  	0,0,0,825,118,1,0,0,0,826,827,5,73,0,0,827,828,5,78,0,0,828,829,5,83,
  	0,0,829,830,5,84,0,0,830,837,5,82,0,0,831,832,5,73,0,0,832,833,5,110,
  	0,0,833,834,5,115,0,0,834,835,5,116,0,0,835,837,5,114,0,0,836,826,1,0,
  	0,0,836,831,1,0,0,0,837,120,1,0,0,0,838,839,5,76,0,0,839,840,5,69,0,0,
  	840,841,5,70,0,0,841,847,5,84,0,0,842,843,5,76,0,0,843,844,5,101,0,0,
  	844,845,5,102,0,0,845,847,5,116,0,0,846,838,1,0,0,0,846,842,1,0,0,0,847,
  	122,1,0,0,0,848,849,5,77,0,0,849,850,5,73,0,0,850,855,5,68,0,0,851,852,
  	5,77,0,0,852,853,5,105,0,0,853,855,5,100,0,0,854,848,1,0,0,0,854,851,
  	1,0,0,0,855,124,1,0,0,0,856,857,5,82,0,0,857,858,5,73,0,0,858,859,5,71,
  	0,0,859,860,5,72,0,0,860,867,5,84,0,0,861,862,5,82,0,0,862,863,5,105,
  	0,0,863,864,5,103,0,0,864,865,5,104,0,0,865,867,5,116,0,0,866,856,1,0,
  	0,0,866,861,1,0,0,0,867,126,1,0,0,0,868,869,5,76,0,0,869,870,5,69,0,0,
  	870,875,5,78,0,0,871,872,5,76,0,0,872,873,5,101,0,0,873,875,5,110,0,0,
  	874,868,1,0,0,0,874,871,1,0,0,0,875,128,1,0,0,0,876,877,5,66,0,0,877,
  	878,5,89,0,0,878,879,5,84,0,0,879,885,5,69,0,0,880,881,5,66,0,0,881,882,
  	5,121,0,0,882,883,5,116,0,0,883,885,5,101,0,0,884,876,1,0,0,0,884,880,
  	1,0,0,0,885,130,1,0,0,0,886,887,5,73,0,0,887,888,5,78,0,0,888,893,5,84,
  	0,0,889,890,5,73,0,0,890,891,5,110,0,0,891,893,5,116,0,0,892,886,1,0,
  	0,0,892,889,1,0,0,0,893,132,1,0,0,0,894,895,5,70,0,0,895,896,5,76,0,0,
  	896,897,5,79,0,0,897,898,5,65,0,0,898,905,5,84,0,0,899,900,5,70,0,0,900,
  	901,5,108,0,0,901,902,5,111,0,0,902,903,5,97,0,0,903,905,5,116,0,0,904,
  	894,1,0,0,0,904,899,1,0,0,0,905,134,1,0,0,0,906,907,5,83,0,0,907,908,
  	5,84,0,0,908,909,5,82,0,0,909,910,5,73,0,0,910,911,5,78,0,0,911,919,5,
  	71,0,0,912,913,5,83,0,0,913,914,5,116,0,0,914,915,5,114,0,0,915,916,5,
  	105,0,0,916,917,5,110,0,0,917,919,5,103,0,0,918,906,1,0,0,0,918,912,1,
  	0,0,0,919,136,1,0,0,0,920,921,5,36,0,0,921,138,1,0,0,0,922,923,5,35,0,
  	0,923,140,1,0,0,0,924,925,5,58,0,0,925,142,1,0,0,0,926,927,5,59,0,0,927,
  	144,1,0,0,0,928,929,5,46,0,0,929,146,1,0,0,0,930,931,5,44,0,0,931,148,
  	1,0,0,0,932,933,5,39,0,0,933,150,1,0,0,0,934,936,5,10,0,0,935,934,1,0,
  	0,0,936,937,1,0,0,0,937,935,1,0,0,0,937,938,1,0,0,0,938,152,1,0,0,0,939,
  	940,5,37,0,0,940,154,1,0,0,0,941,942,5,95,0,0,942,156,1,0,0,0,943,944,
  	5,40,0,0,944,158,1,0,0,0,945,946,5,41,0,0,946,160,1,0,0,0,947,948,5,91,
  	0,0,948,162,1,0,0,0,949,950,5,93,0,0,950,164,1,0,0,0,951,952,5,61,0,0,
  	952,166,1,0,0,0,953,954,5,60,0,0,954,955,5,62,0,0,955,168,1,0,0,0,956,
  	957,5,62,0,0,957,170,1,0,0,0,958,959,5,62,0,0,959,960,5,61,0,0,960,172,
  	1,0,0,0,961,962,5,60,0,0,962,174,1,0,0,0,963,964,5,60,0,0,964,965,5,61,
  	0,0,965,176,1,0,0,0,966,967,5,94,0,0,967,178,1,0,0,0,968,969,5,43,0,0,
  	969,180,1,0,0,0,970,971,5,45,0,0,971,182,1,0,0,0,972,973,5,42,0,0,973,
  	184,1,0,0,0,974,975,5,47,0,0,975,186,1,0,0,0,976,977,5,60,0,0,977,978,
  	5,60,0,0,978,188,1,0,0,0,979,980,5,62,0,0,980,981,5,62,0,0,981,190,1,
  	0,0,0,982,983,5,77,0,0,983,984,5,79,0,0,984,989,5,68,0,0,985,986,5,77,
  	0,0,986,987,5,111,0,0,987,989,5,100,0,0,988,982,1,0,0,0,988,985,1,0,0,
  	0,989,192,1,0,0,0,990,991,5,68,0,0,991,992,5,73,0,0,992,999,5,86,0,0,
  	993,994,5,68,0,0,994,995,5,105,0,0,995,999,5,118,0,0,996,997,5,47,0,0,
  	997,999,5,47,0,0,998,990,1,0,0,0,998,993,1,0,0,0,998,996,1,0,0,0,999,
  	194,1,0,0,0,1000,1001,5,126,0,0,1001,196,1,0,0,0,1002,1003,5,78,0,0,1003,
  	1004,5,79,0,0,1004,1009,5,84,0,0,1005,1006,5,78,0,0,1006,1007,5,111,0,
  	0,1007,1009,5,116,0,0,1008,1002,1,0,0,0,1008,1005,1,0,0,0,1009,198,1,
  	0,0,0,1010,1011,5,65,0,0,1011,1012,5,78,0,0,1012,1017,5,68,0,0,1013,1014,
  	5,65,0,0,1014,1015,5,110,0,0,1015,1017,5,100,0,0,1016,1010,1,0,0,0,1016,
  	1013,1,0,0,0,1017,200,1,0,0,0,1018,1019,5,79,0,0,1019,1023,5,82,0,0,1020,
  	1021,5,79,0,0,1021,1023,5,114,0,0,1022,1018,1,0,0,0,1022,1020,1,0,0,0,
  	1023,202,1,0,0,0,1024,1025,5,69,0,0,1025,1026,5,79,0,0,1026,1031,5,82,
  	0,0,1027,1028,5,69,0,0,1028,1029,5,111,0,0,1029,1031,5,114,0,0,1030,1024,
  	1,0,0,0,1030,1027,1,0,0,0,1031,204,1,0,0,0,1032,1036,5,34,0,0,1033,1035,
  	8,1,0,0,1034,1033,1,0,0,0,1035,1038,1,0,0,0,1036,1034,1,0,0,0,1036,1037,
  	1,0,0,0,1037,1039,1,0,0,0,1038,1036,1,0,0,0,1039,1040,5,34,0,0,1040,206,
  	1,0,0,0,1041,1043,5,38,0,0,1042,1044,3,217,108,0,1043,1042,1,0,0,0,1044,
  	1045,1,0,0,0,1045,1043,1,0,0,0,1045,1046,1,0,0,0,1046,208,1,0,0,0,1047,
  	1049,3,153,76,0,1048,1050,7,2,0,0,1049,1048,1,0,0,0,1050,1051,1,0,0,0,
  	1051,1049,1,0,0,0,1051,1052,1,0,0,0,1052,210,1,0,0,0,1053,1055,3,223,
  	111,0,1054,1053,1,0,0,0,1055,1056,1,0,0,0,1056,1054,1,0,0,0,1056,1057,
  	1,0,0,0,1057,1058,1,0,0,0,1058,1060,5,46,0,0,1059,1061,3,223,111,0,1060,
  	1059,1,0,0,0,1061,1062,1,0,0,0,1062,1060,1,0,0,0,1062,1063,1,0,0,0,1063,
  	1072,1,0,0,0,1064,1066,7,3,0,0,1065,1067,7,4,0,0,1066,1065,1,0,0,0,1067,
  	1068,1,0,0,0,1068,1066,1,0,0,0,1068,1069,1,0,0,0,1069,1071,1,0,0,0,1070,
  	1064,1,0,0,0,1071,1074,1,0,0,0,1072,1070,1,0,0,0,1072,1073,1,0,0,0,1073,
  	212,1,0,0,0,1074,1072,1,0,0,0,1075,1077,3,223,111,0,1076,1075,1,0,0,0,
  	1077,1078,1,0,0,0,1078,1076,1,0,0,0,1078,1079,1,0,0,0,1079,214,1,0,0,
  	0,1080,1081,3,219,109,0,1081,216,1,0,0,0,1082,1083,7,5,0,0,1083,218,1,
  	0,0,0,1084,1090,3,221,110,0,1085,1089,3,221,110,0,1086,1089,3,223,111,
  	0,1087,1089,3,155,77,0,1088,1085,1,0,0,0,1088,1086,1,0,0,0,1088,1087,
  	1,0,0,0,1089,1092,1,0,0,0,1090,1088,1,0,0,0,1090,1091,1,0,0,0,1091,1096,
  	1,0,0,0,1092,1090,1,0,0,0,1093,1097,3,153,76,0,1094,1097,3,137,68,0,1095,
  	1097,3,139,69,0,1096,1093,1,0,0,0,1096,1094,1,0,0,0,1096,1095,1,0,0,0,
  	1096,1097,1,0,0,0,1097,220,1,0,0,0,1098,1099,7,6,0,0,1099,222,1,0,0,0,
  	1100,1101,7,4,0,0,1101,224,1,0,0,0,1102,1104,7,7,0,0,1103,1102,1,0,0,
  	0,1104,1105,1,0,0,0,1105,1103,1,0,0,0,1105,1106,1,0,0,0,1106,1107,1,0,
  	0,0,1107,1108,6,112,1,0,1108,226,1,0,0,0,89,0,233,243,248,261,273,283,
  	303,311,319,329,337,345,351,365,377,385,395,401,415,435,447,457,471,483,
  	491,505,521,535,545,555,565,573,584,590,602,612,622,634,646,654,662,670,
  	678,686,694,702,714,720,728,734,742,754,762,770,778,786,798,808,816,824,
  	836,846,854,866,874,884,892,904,918,937,988,998,1008,1016,1022,1030,1036,
  	1045,1051,1056,1062,1068,1072,1078,1088,1090,1096,1105,2,6,0,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  dariclexerLexerStaticData = staticData.release();
}

}

DaricLexer::DaricLexer(CharStream *input) : Lexer(input) {
  DaricLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *dariclexerLexerStaticData->atn, dariclexerLexerStaticData->decisionToDFA, dariclexerLexerStaticData->sharedContextCache);
}

DaricLexer::~DaricLexer() {
  delete _interpreter;
}

std::string DaricLexer::getGrammarFileName() const {
  return "Daric.g4";
}

const std::vector<std::string>& DaricLexer::getRuleNames() const {
  return dariclexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& DaricLexer::getChannelNames() const {
  return dariclexerLexerStaticData->channelNames;
}

const std::vector<std::string>& DaricLexer::getModeNames() const {
  return dariclexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& DaricLexer::getVocabulary() const {
  return dariclexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView DaricLexer::getSerializedATN() const {
  return dariclexerLexerStaticData->serializedATN;
}

const atn::ATN& DaricLexer::getATN() const {
  return *dariclexerLexerStaticData->atn;
}




void DaricLexer::initialize() {
  ::antlr4::internal::call_once(dariclexerLexerOnceFlag, dariclexerLexerInitialize);
}
