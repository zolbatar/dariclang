
// Generated from Daric.g4 by ANTLR 4.11.1


#include "DaricLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct DaricLexerStaticData final {
  DaricLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  DaricLexerStaticData(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData(DaricLexerStaticData&&) = delete;
  DaricLexerStaticData& operator=(const DaricLexerStaticData&) = delete;
  DaricLexerStaticData& operator=(DaricLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag dariclexerLexerOnceFlag;
DaricLexerStaticData *dariclexerLexerStaticData = nullptr;

void dariclexerLexerInitialize() {
  assert(dariclexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<DaricLexerStaticData>(
    std::vector<std::string>{
      "BlockComment", "LineComment", "CASE", "CONST", "DATA", "DATALABEL", 
      "DEF", "DIM", "ELSE", "END", "FOR", "IF", "IMPORT", "NEXT", "OF", 
      "OPTION", "OTHERWISE", "PRINT", "READ", "RECORD", "REF", "REM", "REPEAT", 
      "RESTORE", "RETURN", "THEN", "SIZE", "STEP", "SWAP", "TO", "UNTIL", 
      "WHEN", "WITH", "WHILE", "MAIN", "ABS", "ACS", "ASN", "ATN", "COS", 
      "DEG", "EXP", "FLOOR", "LET", "LN", "LOG", "PI", "RAD", "ROUND", "SGN", 
      "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHR", "INSTR", "LEFT", 
      "MID", "RIGHT", "LEN", "BYTE", "INT", "FLOAT", "STRING", "DOLLAR", 
      "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "HEX", "NAME", "ALPHA", "DIGIT", "WS"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "'$'", 
      "'#'", "':'", "';'", "'.'", "','", "'''", "", "'%'", "'_'", "'('", 
      "')'", "'['", "']'", "'='", "'<>'", "'>'", "'>='", "'<'", "'<='", 
      "'^'", "'+'", "'-'", "'*'", "'/'", "'<<'", "'>>'", "", "", "'~'"
    },
    std::vector<std::string>{
      "", "BlockComment", "LineComment", "CASE", "CONST", "DATA", "DATALABEL", 
      "DEF", "DIM", "ELSE", "END", "FOR", "IF", "IMPORT", "NEXT", "OF", 
      "OPTION", "OTHERWISE", "PRINT", "READ", "RECORD", "REF", "REM", "REPEAT", 
      "RESTORE", "RETURN", "THEN", "SIZE", "STEP", "SWAP", "TO", "UNTIL", 
      "WHEN", "WITH", "WHILE", "MAIN", "ABS", "ACS", "ASN", "ATN", "COS", 
      "DEG", "EXP", "FLOOR", "LET", "LN", "LOG", "PI", "RAD", "ROUND", "SGN", 
      "SIN", "SQR", "TAN", "FALSE", "TRUE", "ASC", "CHR", "INSTR", "LEFT", 
      "MID", "RIGHT", "LEN", "BYTE", "INT", "FLOAT", "STRING", "DOLLAR", 
      "HASH", "COLON", "SEMICOLON", "DOT", "COMMA", "QUOTE", "NEWLINE", 
      "PERCENT", "UNDERSCORE", "LPAREN", "RPAREN", "SOPEN", "SCLOSE", "EQ", 
      "NE", "GT", "GE", "LT", "LE", "HAT", "PLUS", "MINUS", "MULTIPLY", 
      "DIVIDE", "SHL", "SHR", "MOD", "DIV", "COMP", "NOT", "AND", "OR", 
      "EOR", "STRINGLITERAL", "HEXNUMBER", "BINARYNUMBER", "FLOATLITERAL", 
      "INTEGERLITERAL", "IDENTIFIER", "WS"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,107,1085,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,1,0,1,0,1,0,1,0,5,0,228,8,0,10,0,12,0,231,9,0,1,0,1,0,1,0,1,0,1,
  	0,1,1,1,1,3,1,240,8,1,1,1,5,1,243,8,1,10,1,12,1,246,9,1,1,1,1,1,1,2,1,
  	2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,258,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
  	1,3,1,3,3,3,270,8,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,280,8,4,1,5,1,
  	5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,
  	300,8,5,1,6,1,6,1,6,1,6,1,6,1,6,3,6,308,8,6,1,7,1,7,1,7,1,7,1,7,1,7,3,
  	7,316,8,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,326,8,8,1,9,1,9,1,9,1,9,
  	1,9,1,9,3,9,334,8,9,1,10,1,10,1,10,1,10,1,10,1,10,3,10,342,8,10,1,11,
  	1,11,1,11,1,11,3,11,348,8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
  	1,12,1,12,1,12,1,12,3,12,362,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
  	1,13,3,13,372,8,13,1,14,1,14,1,14,1,14,3,14,378,8,14,1,15,1,15,1,15,1,
  	15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,392,8,15,1,16,1,16,1,
  	16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
  	16,1,16,3,16,412,8,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
  	17,3,17,424,8,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,434,8,18,
  	1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,448,
  	8,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,460,8,20,
  	1,21,1,21,1,21,1,21,1,21,1,21,3,21,468,8,21,1,22,1,22,1,22,1,22,1,22,
  	1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,482,8,22,1,23,1,23,1,23,1,23,
  	1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,498,8,23,1,24,
  	1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,512,8,24,
  	1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,522,8,25,1,26,1,26,1,26,
  	1,26,1,26,1,26,1,26,1,26,3,26,532,8,26,1,27,1,27,1,27,1,27,1,27,1,27,
  	1,27,1,27,3,27,542,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,
  	3,28,553,8,28,1,29,1,29,1,29,1,29,3,29,559,8,29,1,30,1,30,1,30,1,30,1,
  	30,1,30,1,30,1,30,1,30,1,30,3,30,571,8,30,1,31,1,31,1,31,1,31,1,31,1,
  	31,1,31,1,31,3,31,581,8,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,
  	32,591,8,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,603,
  	8,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,615,8,34,
  	1,35,1,35,1,35,1,35,1,35,1,35,3,35,623,8,35,1,36,1,36,1,36,1,36,1,36,
  	1,36,3,36,631,8,36,1,37,1,37,1,37,1,37,1,37,1,37,3,37,639,8,37,1,38,1,
  	38,1,38,1,38,1,38,1,38,3,38,647,8,38,1,39,1,39,1,39,1,39,1,39,1,39,3,
  	39,655,8,39,1,40,1,40,1,40,1,40,1,40,1,40,3,40,663,8,40,1,41,1,41,1,41,
  	1,41,1,41,1,41,3,41,671,8,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
  	1,42,1,42,3,42,683,8,42,1,43,1,43,1,43,1,43,1,43,1,43,3,43,691,8,43,1,
  	44,1,44,1,44,1,44,3,44,697,8,44,1,45,1,45,1,45,1,45,1,45,1,45,3,45,705,
  	8,45,1,46,1,46,1,46,1,46,3,46,711,8,46,1,47,1,47,1,47,1,47,1,47,1,47,
  	3,47,719,8,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,
  	731,8,48,1,49,1,49,1,49,1,49,1,49,1,49,3,49,739,8,49,1,50,1,50,1,50,1,
  	50,1,50,1,50,3,50,747,8,50,1,51,1,51,1,51,1,51,1,51,1,51,3,51,755,8,51,
  	1,52,1,52,1,52,1,52,1,52,1,52,3,52,763,8,52,1,53,1,53,1,53,1,53,1,53,
  	1,53,1,53,1,53,1,53,1,53,3,53,775,8,53,1,54,1,54,1,54,1,54,1,54,1,54,
  	1,54,1,54,3,54,785,8,54,1,55,1,55,1,55,1,55,1,55,1,55,3,55,793,8,55,1,
  	56,1,56,1,56,1,56,1,56,1,56,3,56,801,8,56,1,57,1,57,1,57,1,57,1,57,1,
  	57,1,57,1,57,1,57,1,57,3,57,813,8,57,1,58,1,58,1,58,1,58,1,58,1,58,1,
  	58,1,58,3,58,823,8,58,1,59,1,59,1,59,1,59,1,59,1,59,3,59,831,8,59,1,60,
  	1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,3,60,843,8,60,1,61,1,61,
  	1,61,1,61,1,61,1,61,3,61,851,8,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
  	1,62,3,62,861,8,62,1,63,1,63,1,63,1,63,1,63,1,63,3,63,869,8,63,1,64,1,
  	64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,3,64,881,8,64,1,65,1,65,1,
  	65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,3,65,895,8,65,1,66,1,
  	66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,4,
  	73,912,8,73,11,73,12,73,913,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,
  	78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,83,1,83,1,83,1,
  	84,1,84,1,85,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,
  	90,1,91,1,91,1,91,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,3,93,965,
  	8,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,3,94,975,8,94,1,95,1,95,
  	1,96,1,96,1,96,1,96,1,96,1,96,3,96,985,8,96,1,97,1,97,1,97,1,97,1,97,
  	1,97,3,97,993,8,97,1,98,1,98,1,98,1,98,3,98,999,8,98,1,99,1,99,1,99,1,
  	99,1,99,1,99,3,99,1007,8,99,1,100,1,100,5,100,1011,8,100,10,100,12,100,
  	1014,9,100,1,100,1,100,1,101,1,101,4,101,1020,8,101,11,101,12,101,1021,
  	1,102,1,102,4,102,1026,8,102,11,102,12,102,1027,1,103,4,103,1031,8,103,
  	11,103,12,103,1032,1,103,1,103,4,103,1037,8,103,11,103,12,103,1038,1,
  	103,1,103,4,103,1043,8,103,11,103,12,103,1044,5,103,1047,8,103,10,103,
  	12,103,1050,9,103,1,104,4,104,1053,8,104,11,104,12,104,1054,1,105,1,105,
  	1,106,1,106,1,107,1,107,1,107,1,107,5,107,1065,8,107,10,107,12,107,1068,
  	9,107,1,107,1,107,1,107,3,107,1073,8,107,1,108,1,108,1,109,1,109,1,110,
  	4,110,1080,8,110,11,110,12,110,1081,1,110,1,110,1,229,0,111,1,1,3,2,5,
  	3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
  	16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
  	55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
  	39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
  	101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
  	121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
  	141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,
  	161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,
  	181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,
  	201,101,203,102,205,103,207,104,209,105,211,106,213,0,215,0,217,0,219,
  	0,221,107,1,0,8,2,0,10,10,13,13,3,0,10,10,13,13,34,34,2,0,48,49,124,124,
  	3,0,69,69,101,101,124,124,1,0,48,57,3,0,48,57,65,70,97,102,2,0,65,90,
  	97,122,3,0,9,9,13,13,32,32,1170,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
  	7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
  	0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
  	0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
  	1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,
  	0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
  	0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
  	1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
  	0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,
  	0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
  	1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,
  	1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,
  	1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,
  	1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,
  	1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,
  	1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,
  	1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,
  	1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,
  	1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,
  	1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,
  	1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,221,
  	1,0,0,0,1,223,1,0,0,0,3,239,1,0,0,0,5,257,1,0,0,0,7,269,1,0,0,0,9,279,
  	1,0,0,0,11,299,1,0,0,0,13,307,1,0,0,0,15,315,1,0,0,0,17,325,1,0,0,0,19,
  	333,1,0,0,0,21,341,1,0,0,0,23,347,1,0,0,0,25,361,1,0,0,0,27,371,1,0,0,
  	0,29,377,1,0,0,0,31,391,1,0,0,0,33,411,1,0,0,0,35,423,1,0,0,0,37,433,
  	1,0,0,0,39,447,1,0,0,0,41,459,1,0,0,0,43,467,1,0,0,0,45,481,1,0,0,0,47,
  	497,1,0,0,0,49,511,1,0,0,0,51,521,1,0,0,0,53,531,1,0,0,0,55,541,1,0,0,
  	0,57,552,1,0,0,0,59,558,1,0,0,0,61,570,1,0,0,0,63,580,1,0,0,0,65,590,
  	1,0,0,0,67,602,1,0,0,0,69,614,1,0,0,0,71,622,1,0,0,0,73,630,1,0,0,0,75,
  	638,1,0,0,0,77,646,1,0,0,0,79,654,1,0,0,0,81,662,1,0,0,0,83,670,1,0,0,
  	0,85,682,1,0,0,0,87,690,1,0,0,0,89,696,1,0,0,0,91,704,1,0,0,0,93,710,
  	1,0,0,0,95,718,1,0,0,0,97,730,1,0,0,0,99,738,1,0,0,0,101,746,1,0,0,0,
  	103,754,1,0,0,0,105,762,1,0,0,0,107,774,1,0,0,0,109,784,1,0,0,0,111,792,
  	1,0,0,0,113,800,1,0,0,0,115,812,1,0,0,0,117,822,1,0,0,0,119,830,1,0,0,
  	0,121,842,1,0,0,0,123,850,1,0,0,0,125,860,1,0,0,0,127,868,1,0,0,0,129,
  	880,1,0,0,0,131,894,1,0,0,0,133,896,1,0,0,0,135,898,1,0,0,0,137,900,1,
  	0,0,0,139,902,1,0,0,0,141,904,1,0,0,0,143,906,1,0,0,0,145,908,1,0,0,0,
  	147,911,1,0,0,0,149,915,1,0,0,0,151,917,1,0,0,0,153,919,1,0,0,0,155,921,
  	1,0,0,0,157,923,1,0,0,0,159,925,1,0,0,0,161,927,1,0,0,0,163,929,1,0,0,
  	0,165,932,1,0,0,0,167,934,1,0,0,0,169,937,1,0,0,0,171,939,1,0,0,0,173,
  	942,1,0,0,0,175,944,1,0,0,0,177,946,1,0,0,0,179,948,1,0,0,0,181,950,1,
  	0,0,0,183,952,1,0,0,0,185,955,1,0,0,0,187,964,1,0,0,0,189,974,1,0,0,0,
  	191,976,1,0,0,0,193,984,1,0,0,0,195,992,1,0,0,0,197,998,1,0,0,0,199,1006,
  	1,0,0,0,201,1008,1,0,0,0,203,1017,1,0,0,0,205,1023,1,0,0,0,207,1030,1,
  	0,0,0,209,1052,1,0,0,0,211,1056,1,0,0,0,213,1058,1,0,0,0,215,1060,1,0,
  	0,0,217,1074,1,0,0,0,219,1076,1,0,0,0,221,1079,1,0,0,0,223,224,5,35,0,
  	0,224,225,5,123,0,0,225,229,1,0,0,0,226,228,9,0,0,0,227,226,1,0,0,0,228,
  	231,1,0,0,0,229,230,1,0,0,0,229,227,1,0,0,0,230,232,1,0,0,0,231,229,1,
  	0,0,0,232,233,5,125,0,0,233,234,5,35,0,0,234,235,1,0,0,0,235,236,6,0,
  	0,0,236,2,1,0,0,0,237,240,3,43,21,0,238,240,3,135,67,0,239,237,1,0,0,
  	0,239,238,1,0,0,0,240,244,1,0,0,0,241,243,8,0,0,0,242,241,1,0,0,0,243,
  	246,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,247,1,0,0,0,246,244,1,
  	0,0,0,247,248,6,1,0,0,248,4,1,0,0,0,249,250,5,67,0,0,250,251,5,65,0,0,
  	251,252,5,83,0,0,252,258,5,69,0,0,253,254,5,67,0,0,254,255,5,97,0,0,255,
  	256,5,115,0,0,256,258,5,101,0,0,257,249,1,0,0,0,257,253,1,0,0,0,258,6,
  	1,0,0,0,259,260,5,67,0,0,260,261,5,79,0,0,261,262,5,78,0,0,262,263,5,
  	83,0,0,263,270,5,84,0,0,264,265,5,67,0,0,265,266,5,111,0,0,266,267,5,
  	110,0,0,267,268,5,115,0,0,268,270,5,116,0,0,269,259,1,0,0,0,269,264,1,
  	0,0,0,270,8,1,0,0,0,271,272,5,68,0,0,272,273,5,65,0,0,273,274,5,84,0,
  	0,274,280,5,65,0,0,275,276,5,68,0,0,276,277,5,97,0,0,277,278,5,116,0,
  	0,278,280,5,97,0,0,279,271,1,0,0,0,279,275,1,0,0,0,280,10,1,0,0,0,281,
  	282,5,68,0,0,282,283,5,65,0,0,283,284,5,84,0,0,284,285,5,65,0,0,285,286,
  	5,76,0,0,286,287,5,65,0,0,287,288,5,66,0,0,288,289,5,69,0,0,289,300,5,
  	76,0,0,290,291,5,68,0,0,291,292,5,97,0,0,292,293,5,116,0,0,293,294,5,
  	97,0,0,294,295,5,76,0,0,295,296,5,97,0,0,296,297,5,98,0,0,297,298,5,101,
  	0,0,298,300,5,108,0,0,299,281,1,0,0,0,299,290,1,0,0,0,300,12,1,0,0,0,
  	301,302,5,68,0,0,302,303,5,69,0,0,303,308,5,70,0,0,304,305,5,68,0,0,305,
  	306,5,101,0,0,306,308,5,102,0,0,307,301,1,0,0,0,307,304,1,0,0,0,308,14,
  	1,0,0,0,309,310,5,68,0,0,310,311,5,73,0,0,311,316,5,77,0,0,312,313,5,
  	68,0,0,313,314,5,105,0,0,314,316,5,109,0,0,315,309,1,0,0,0,315,312,1,
  	0,0,0,316,16,1,0,0,0,317,318,5,69,0,0,318,319,5,76,0,0,319,320,5,83,0,
  	0,320,326,5,69,0,0,321,322,5,69,0,0,322,323,5,108,0,0,323,324,5,115,0,
  	0,324,326,5,101,0,0,325,317,1,0,0,0,325,321,1,0,0,0,326,18,1,0,0,0,327,
  	328,5,69,0,0,328,329,5,78,0,0,329,334,5,68,0,0,330,331,5,69,0,0,331,332,
  	5,110,0,0,332,334,5,100,0,0,333,327,1,0,0,0,333,330,1,0,0,0,334,20,1,
  	0,0,0,335,336,5,70,0,0,336,337,5,79,0,0,337,342,5,82,0,0,338,339,5,70,
  	0,0,339,340,5,111,0,0,340,342,5,114,0,0,341,335,1,0,0,0,341,338,1,0,0,
  	0,342,22,1,0,0,0,343,344,5,73,0,0,344,348,5,70,0,0,345,346,5,73,0,0,346,
  	348,5,102,0,0,347,343,1,0,0,0,347,345,1,0,0,0,348,24,1,0,0,0,349,350,
  	5,73,0,0,350,351,5,77,0,0,351,352,5,80,0,0,352,353,5,79,0,0,353,354,5,
  	82,0,0,354,362,5,84,0,0,355,356,5,73,0,0,356,357,5,109,0,0,357,358,5,
  	112,0,0,358,359,5,111,0,0,359,360,5,114,0,0,360,362,5,116,0,0,361,349,
  	1,0,0,0,361,355,1,0,0,0,362,26,1,0,0,0,363,364,5,78,0,0,364,365,5,69,
  	0,0,365,366,5,88,0,0,366,372,5,84,0,0,367,368,5,78,0,0,368,369,5,101,
  	0,0,369,370,5,120,0,0,370,372,5,116,0,0,371,363,1,0,0,0,371,367,1,0,0,
  	0,372,28,1,0,0,0,373,374,5,79,0,0,374,378,5,70,0,0,375,376,5,79,0,0,376,
  	378,5,102,0,0,377,373,1,0,0,0,377,375,1,0,0,0,378,30,1,0,0,0,379,380,
  	5,79,0,0,380,381,5,80,0,0,381,382,5,84,0,0,382,383,5,73,0,0,383,384,5,
  	79,0,0,384,392,5,78,0,0,385,386,5,79,0,0,386,387,5,112,0,0,387,388,5,
  	116,0,0,388,389,5,105,0,0,389,390,5,111,0,0,390,392,5,110,0,0,391,379,
  	1,0,0,0,391,385,1,0,0,0,392,32,1,0,0,0,393,394,5,79,0,0,394,395,5,84,
  	0,0,395,396,5,72,0,0,396,397,5,69,0,0,397,398,5,82,0,0,398,399,5,87,0,
  	0,399,400,5,73,0,0,400,401,5,83,0,0,401,412,5,69,0,0,402,403,5,79,0,0,
  	403,404,5,116,0,0,404,405,5,104,0,0,405,406,5,101,0,0,406,407,5,114,0,
  	0,407,408,5,119,0,0,408,409,5,105,0,0,409,410,5,115,0,0,410,412,5,101,
  	0,0,411,393,1,0,0,0,411,402,1,0,0,0,412,34,1,0,0,0,413,414,5,80,0,0,414,
  	415,5,82,0,0,415,416,5,73,0,0,416,417,5,78,0,0,417,424,5,84,0,0,418,419,
  	5,80,0,0,419,420,5,114,0,0,420,421,5,105,0,0,421,422,5,110,0,0,422,424,
  	5,116,0,0,423,413,1,0,0,0,423,418,1,0,0,0,424,36,1,0,0,0,425,426,5,82,
  	0,0,426,427,5,69,0,0,427,428,5,65,0,0,428,434,5,68,0,0,429,430,5,82,0,
  	0,430,431,5,101,0,0,431,432,5,97,0,0,432,434,5,100,0,0,433,425,1,0,0,
  	0,433,429,1,0,0,0,434,38,1,0,0,0,435,436,5,82,0,0,436,437,5,69,0,0,437,
  	438,5,67,0,0,438,439,5,79,0,0,439,440,5,82,0,0,440,448,5,68,0,0,441,442,
  	5,82,0,0,442,443,5,101,0,0,443,444,5,99,0,0,444,445,5,111,0,0,445,446,
  	5,114,0,0,446,448,5,100,0,0,447,435,1,0,0,0,447,441,1,0,0,0,448,40,1,
  	0,0,0,449,450,5,66,0,0,450,451,5,89,0,0,451,452,5,82,0,0,452,453,5,69,
  	0,0,453,460,5,70,0,0,454,455,5,66,0,0,455,456,5,121,0,0,456,457,5,82,
  	0,0,457,458,5,101,0,0,458,460,5,102,0,0,459,449,1,0,0,0,459,454,1,0,0,
  	0,460,42,1,0,0,0,461,462,5,82,0,0,462,463,5,69,0,0,463,468,5,77,0,0,464,
  	465,5,82,0,0,465,466,5,101,0,0,466,468,5,109,0,0,467,461,1,0,0,0,467,
  	464,1,0,0,0,468,44,1,0,0,0,469,470,5,82,0,0,470,471,5,69,0,0,471,472,
  	5,80,0,0,472,473,5,69,0,0,473,474,5,65,0,0,474,482,5,84,0,0,475,476,5,
  	82,0,0,476,477,5,101,0,0,477,478,5,112,0,0,478,479,5,101,0,0,479,480,
  	5,97,0,0,480,482,5,116,0,0,481,469,1,0,0,0,481,475,1,0,0,0,482,46,1,0,
  	0,0,483,484,5,82,0,0,484,485,5,69,0,0,485,486,5,83,0,0,486,487,5,84,0,
  	0,487,488,5,79,0,0,488,489,5,82,0,0,489,498,5,69,0,0,490,491,5,82,0,0,
  	491,492,5,101,0,0,492,493,5,115,0,0,493,494,5,116,0,0,494,495,5,111,0,
  	0,495,496,5,114,0,0,496,498,5,101,0,0,497,483,1,0,0,0,497,490,1,0,0,0,
  	498,48,1,0,0,0,499,500,5,82,0,0,500,501,5,69,0,0,501,502,5,84,0,0,502,
  	503,5,85,0,0,503,504,5,82,0,0,504,512,5,78,0,0,505,506,5,82,0,0,506,507,
  	5,101,0,0,507,508,5,116,0,0,508,509,5,117,0,0,509,510,5,114,0,0,510,512,
  	5,110,0,0,511,499,1,0,0,0,511,505,1,0,0,0,512,50,1,0,0,0,513,514,5,84,
  	0,0,514,515,5,72,0,0,515,516,5,69,0,0,516,522,5,78,0,0,517,518,5,84,0,
  	0,518,519,5,104,0,0,519,520,5,101,0,0,520,522,5,110,0,0,521,513,1,0,0,
  	0,521,517,1,0,0,0,522,52,1,0,0,0,523,524,5,83,0,0,524,525,5,73,0,0,525,
  	526,5,90,0,0,526,532,5,69,0,0,527,528,5,83,0,0,528,529,5,105,0,0,529,
  	530,5,122,0,0,530,532,5,101,0,0,531,523,1,0,0,0,531,527,1,0,0,0,532,54,
  	1,0,0,0,533,534,5,83,0,0,534,535,5,84,0,0,535,536,5,69,0,0,536,542,5,
  	80,0,0,537,538,5,83,0,0,538,539,5,116,0,0,539,540,5,101,0,0,540,542,5,
  	112,0,0,541,533,1,0,0,0,541,537,1,0,0,0,542,56,1,0,0,0,543,544,5,83,0,
  	0,544,545,5,87,0,0,545,546,5,65,0,0,546,553,5,80,0,0,547,548,5,83,0,0,
  	548,549,5,119,0,0,549,550,5,97,0,0,550,551,5,112,0,0,551,553,5,32,0,0,
  	552,543,1,0,0,0,552,547,1,0,0,0,553,58,1,0,0,0,554,555,5,84,0,0,555,559,
  	5,79,0,0,556,557,5,84,0,0,557,559,5,111,0,0,558,554,1,0,0,0,558,556,1,
  	0,0,0,559,60,1,0,0,0,560,561,5,85,0,0,561,562,5,78,0,0,562,563,5,84,0,
  	0,563,564,5,73,0,0,564,571,5,76,0,0,565,566,5,85,0,0,566,567,5,110,0,
  	0,567,568,5,116,0,0,568,569,5,105,0,0,569,571,5,108,0,0,570,560,1,0,0,
  	0,570,565,1,0,0,0,571,62,1,0,0,0,572,573,5,87,0,0,573,574,5,72,0,0,574,
  	575,5,69,0,0,575,581,5,78,0,0,576,577,5,87,0,0,577,578,5,104,0,0,578,
  	579,5,101,0,0,579,581,5,110,0,0,580,572,1,0,0,0,580,576,1,0,0,0,581,64,
  	1,0,0,0,582,583,5,87,0,0,583,584,5,73,0,0,584,585,5,84,0,0,585,591,5,
  	72,0,0,586,587,5,87,0,0,587,588,5,105,0,0,588,589,5,116,0,0,589,591,5,
  	104,0,0,590,582,1,0,0,0,590,586,1,0,0,0,591,66,1,0,0,0,592,593,5,87,0,
  	0,593,594,5,72,0,0,594,595,5,73,0,0,595,596,5,76,0,0,596,603,5,69,0,0,
  	597,598,5,87,0,0,598,599,5,104,0,0,599,600,5,105,0,0,600,601,5,108,0,
  	0,601,603,5,101,0,0,602,592,1,0,0,0,602,597,1,0,0,0,603,68,1,0,0,0,604,
  	605,5,64,0,0,605,606,5,77,0,0,606,607,5,65,0,0,607,608,5,73,0,0,608,615,
  	5,78,0,0,609,610,5,64,0,0,610,611,5,77,0,0,611,612,5,97,0,0,612,613,5,
  	105,0,0,613,615,5,110,0,0,614,604,1,0,0,0,614,609,1,0,0,0,615,70,1,0,
  	0,0,616,617,5,65,0,0,617,618,5,66,0,0,618,623,5,83,0,0,619,620,5,65,0,
  	0,620,621,5,98,0,0,621,623,5,115,0,0,622,616,1,0,0,0,622,619,1,0,0,0,
  	623,72,1,0,0,0,624,625,5,65,0,0,625,626,5,67,0,0,626,631,5,83,0,0,627,
  	628,5,65,0,0,628,629,5,99,0,0,629,631,5,115,0,0,630,624,1,0,0,0,630,627,
  	1,0,0,0,631,74,1,0,0,0,632,633,5,65,0,0,633,634,5,83,0,0,634,639,5,78,
  	0,0,635,636,5,65,0,0,636,637,5,115,0,0,637,639,5,110,0,0,638,632,1,0,
  	0,0,638,635,1,0,0,0,639,76,1,0,0,0,640,641,5,65,0,0,641,642,5,84,0,0,
  	642,647,5,78,0,0,643,644,5,65,0,0,644,645,5,116,0,0,645,647,5,110,0,0,
  	646,640,1,0,0,0,646,643,1,0,0,0,647,78,1,0,0,0,648,649,5,67,0,0,649,650,
  	5,79,0,0,650,655,5,83,0,0,651,652,5,67,0,0,652,653,5,111,0,0,653,655,
  	5,115,0,0,654,648,1,0,0,0,654,651,1,0,0,0,655,80,1,0,0,0,656,657,5,68,
  	0,0,657,658,5,69,0,0,658,663,5,71,0,0,659,660,5,68,0,0,660,661,5,101,
  	0,0,661,663,5,103,0,0,662,656,1,0,0,0,662,659,1,0,0,0,663,82,1,0,0,0,
  	664,665,5,69,0,0,665,666,5,88,0,0,666,671,5,80,0,0,667,668,5,69,0,0,668,
  	669,5,120,0,0,669,671,5,112,0,0,670,664,1,0,0,0,670,667,1,0,0,0,671,84,
  	1,0,0,0,672,673,5,70,0,0,673,674,5,76,0,0,674,675,5,79,0,0,675,676,5,
  	79,0,0,676,683,5,82,0,0,677,678,5,70,0,0,678,679,5,108,0,0,679,680,5,
  	111,0,0,680,681,5,111,0,0,681,683,5,114,0,0,682,672,1,0,0,0,682,677,1,
  	0,0,0,683,86,1,0,0,0,684,685,5,76,0,0,685,686,5,69,0,0,686,691,5,84,0,
  	0,687,688,5,76,0,0,688,689,5,101,0,0,689,691,5,116,0,0,690,684,1,0,0,
  	0,690,687,1,0,0,0,691,88,1,0,0,0,692,693,5,76,0,0,693,697,5,78,0,0,694,
  	695,5,76,0,0,695,697,5,110,0,0,696,692,1,0,0,0,696,694,1,0,0,0,697,90,
  	1,0,0,0,698,699,5,76,0,0,699,700,5,79,0,0,700,705,5,71,0,0,701,702,5,
  	76,0,0,702,703,5,111,0,0,703,705,5,103,0,0,704,698,1,0,0,0,704,701,1,
  	0,0,0,705,92,1,0,0,0,706,707,5,80,0,0,707,711,5,73,0,0,708,709,5,80,0,
  	0,709,711,5,105,0,0,710,706,1,0,0,0,710,708,1,0,0,0,711,94,1,0,0,0,712,
  	713,5,82,0,0,713,714,5,65,0,0,714,719,5,68,0,0,715,716,5,82,0,0,716,717,
  	5,97,0,0,717,719,5,100,0,0,718,712,1,0,0,0,718,715,1,0,0,0,719,96,1,0,
  	0,0,720,721,5,82,0,0,721,722,5,79,0,0,722,723,5,85,0,0,723,724,5,78,0,
  	0,724,731,5,68,0,0,725,726,5,82,0,0,726,727,5,111,0,0,727,728,5,117,0,
  	0,728,729,5,110,0,0,729,731,5,100,0,0,730,720,1,0,0,0,730,725,1,0,0,0,
  	731,98,1,0,0,0,732,733,5,83,0,0,733,734,5,71,0,0,734,739,5,78,0,0,735,
  	736,5,83,0,0,736,737,5,103,0,0,737,739,5,110,0,0,738,732,1,0,0,0,738,
  	735,1,0,0,0,739,100,1,0,0,0,740,741,5,83,0,0,741,742,5,73,0,0,742,747,
  	5,78,0,0,743,744,5,83,0,0,744,745,5,105,0,0,745,747,5,110,0,0,746,740,
  	1,0,0,0,746,743,1,0,0,0,747,102,1,0,0,0,748,749,5,83,0,0,749,750,5,81,
  	0,0,750,755,5,82,0,0,751,752,5,83,0,0,752,753,5,113,0,0,753,755,5,114,
  	0,0,754,748,1,0,0,0,754,751,1,0,0,0,755,104,1,0,0,0,756,757,5,84,0,0,
  	757,758,5,65,0,0,758,763,5,78,0,0,759,760,5,84,0,0,760,761,5,97,0,0,761,
  	763,5,110,0,0,762,756,1,0,0,0,762,759,1,0,0,0,763,106,1,0,0,0,764,765,
  	5,70,0,0,765,766,5,65,0,0,766,767,5,76,0,0,767,768,5,83,0,0,768,775,5,
  	69,0,0,769,770,5,70,0,0,770,771,5,97,0,0,771,772,5,108,0,0,772,773,5,
  	115,0,0,773,775,5,101,0,0,774,764,1,0,0,0,774,769,1,0,0,0,775,108,1,0,
  	0,0,776,777,5,84,0,0,777,778,5,82,0,0,778,779,5,85,0,0,779,785,5,69,0,
  	0,780,781,5,84,0,0,781,782,5,114,0,0,782,783,5,117,0,0,783,785,5,101,
  	0,0,784,776,1,0,0,0,784,780,1,0,0,0,785,110,1,0,0,0,786,787,5,65,0,0,
  	787,788,5,83,0,0,788,793,5,67,0,0,789,790,5,65,0,0,790,791,5,115,0,0,
  	791,793,5,99,0,0,792,786,1,0,0,0,792,789,1,0,0,0,793,112,1,0,0,0,794,
  	795,5,67,0,0,795,796,5,72,0,0,796,801,5,82,0,0,797,798,5,67,0,0,798,799,
  	5,104,0,0,799,801,5,114,0,0,800,794,1,0,0,0,800,797,1,0,0,0,801,114,1,
  	0,0,0,802,803,5,73,0,0,803,804,5,78,0,0,804,805,5,83,0,0,805,806,5,84,
  	0,0,806,813,5,82,0,0,807,808,5,73,0,0,808,809,5,110,0,0,809,810,5,115,
  	0,0,810,811,5,116,0,0,811,813,5,114,0,0,812,802,1,0,0,0,812,807,1,0,0,
  	0,813,116,1,0,0,0,814,815,5,76,0,0,815,816,5,69,0,0,816,817,5,70,0,0,
  	817,823,5,84,0,0,818,819,5,76,0,0,819,820,5,101,0,0,820,821,5,102,0,0,
  	821,823,5,116,0,0,822,814,1,0,0,0,822,818,1,0,0,0,823,118,1,0,0,0,824,
  	825,5,77,0,0,825,826,5,73,0,0,826,831,5,68,0,0,827,828,5,77,0,0,828,829,
  	5,105,0,0,829,831,5,100,0,0,830,824,1,0,0,0,830,827,1,0,0,0,831,120,1,
  	0,0,0,832,833,5,82,0,0,833,834,5,73,0,0,834,835,5,71,0,0,835,836,5,72,
  	0,0,836,843,5,84,0,0,837,838,5,82,0,0,838,839,5,105,0,0,839,840,5,103,
  	0,0,840,841,5,104,0,0,841,843,5,116,0,0,842,832,1,0,0,0,842,837,1,0,0,
  	0,843,122,1,0,0,0,844,845,5,76,0,0,845,846,5,69,0,0,846,851,5,78,0,0,
  	847,848,5,76,0,0,848,849,5,101,0,0,849,851,5,110,0,0,850,844,1,0,0,0,
  	850,847,1,0,0,0,851,124,1,0,0,0,852,853,5,66,0,0,853,854,5,89,0,0,854,
  	855,5,84,0,0,855,861,5,69,0,0,856,857,5,66,0,0,857,858,5,121,0,0,858,
  	859,5,116,0,0,859,861,5,101,0,0,860,852,1,0,0,0,860,856,1,0,0,0,861,126,
  	1,0,0,0,862,863,5,73,0,0,863,864,5,78,0,0,864,869,5,84,0,0,865,866,5,
  	73,0,0,866,867,5,110,0,0,867,869,5,116,0,0,868,862,1,0,0,0,868,865,1,
  	0,0,0,869,128,1,0,0,0,870,871,5,70,0,0,871,872,5,76,0,0,872,873,5,79,
  	0,0,873,874,5,65,0,0,874,881,5,84,0,0,875,876,5,70,0,0,876,877,5,108,
  	0,0,877,878,5,111,0,0,878,879,5,97,0,0,879,881,5,116,0,0,880,870,1,0,
  	0,0,880,875,1,0,0,0,881,130,1,0,0,0,882,883,5,83,0,0,883,884,5,84,0,0,
  	884,885,5,82,0,0,885,886,5,73,0,0,886,887,5,78,0,0,887,895,5,71,0,0,888,
  	889,5,83,0,0,889,890,5,116,0,0,890,891,5,114,0,0,891,892,5,105,0,0,892,
  	893,5,110,0,0,893,895,5,103,0,0,894,882,1,0,0,0,894,888,1,0,0,0,895,132,
  	1,0,0,0,896,897,5,36,0,0,897,134,1,0,0,0,898,899,5,35,0,0,899,136,1,0,
  	0,0,900,901,5,58,0,0,901,138,1,0,0,0,902,903,5,59,0,0,903,140,1,0,0,0,
  	904,905,5,46,0,0,905,142,1,0,0,0,906,907,5,44,0,0,907,144,1,0,0,0,908,
  	909,5,39,0,0,909,146,1,0,0,0,910,912,5,10,0,0,911,910,1,0,0,0,912,913,
  	1,0,0,0,913,911,1,0,0,0,913,914,1,0,0,0,914,148,1,0,0,0,915,916,5,37,
  	0,0,916,150,1,0,0,0,917,918,5,95,0,0,918,152,1,0,0,0,919,920,5,40,0,0,
  	920,154,1,0,0,0,921,922,5,41,0,0,922,156,1,0,0,0,923,924,5,91,0,0,924,
  	158,1,0,0,0,925,926,5,93,0,0,926,160,1,0,0,0,927,928,5,61,0,0,928,162,
  	1,0,0,0,929,930,5,60,0,0,930,931,5,62,0,0,931,164,1,0,0,0,932,933,5,62,
  	0,0,933,166,1,0,0,0,934,935,5,62,0,0,935,936,5,61,0,0,936,168,1,0,0,0,
  	937,938,5,60,0,0,938,170,1,0,0,0,939,940,5,60,0,0,940,941,5,61,0,0,941,
  	172,1,0,0,0,942,943,5,94,0,0,943,174,1,0,0,0,944,945,5,43,0,0,945,176,
  	1,0,0,0,946,947,5,45,0,0,947,178,1,0,0,0,948,949,5,42,0,0,949,180,1,0,
  	0,0,950,951,5,47,0,0,951,182,1,0,0,0,952,953,5,60,0,0,953,954,5,60,0,
  	0,954,184,1,0,0,0,955,956,5,62,0,0,956,957,5,62,0,0,957,186,1,0,0,0,958,
  	959,5,77,0,0,959,960,5,79,0,0,960,965,5,68,0,0,961,962,5,77,0,0,962,963,
  	5,111,0,0,963,965,5,100,0,0,964,958,1,0,0,0,964,961,1,0,0,0,965,188,1,
  	0,0,0,966,967,5,68,0,0,967,968,5,73,0,0,968,975,5,86,0,0,969,970,5,68,
  	0,0,970,971,5,105,0,0,971,975,5,118,0,0,972,973,5,47,0,0,973,975,5,47,
  	0,0,974,966,1,0,0,0,974,969,1,0,0,0,974,972,1,0,0,0,975,190,1,0,0,0,976,
  	977,5,126,0,0,977,192,1,0,0,0,978,979,5,78,0,0,979,980,5,79,0,0,980,985,
  	5,84,0,0,981,982,5,78,0,0,982,983,5,111,0,0,983,985,5,116,0,0,984,978,
  	1,0,0,0,984,981,1,0,0,0,985,194,1,0,0,0,986,987,5,65,0,0,987,988,5,78,
  	0,0,988,993,5,68,0,0,989,990,5,65,0,0,990,991,5,110,0,0,991,993,5,100,
  	0,0,992,986,1,0,0,0,992,989,1,0,0,0,993,196,1,0,0,0,994,995,5,79,0,0,
  	995,999,5,82,0,0,996,997,5,79,0,0,997,999,5,114,0,0,998,994,1,0,0,0,998,
  	996,1,0,0,0,999,198,1,0,0,0,1000,1001,5,69,0,0,1001,1002,5,79,0,0,1002,
  	1007,5,82,0,0,1003,1004,5,69,0,0,1004,1005,5,111,0,0,1005,1007,5,114,
  	0,0,1006,1000,1,0,0,0,1006,1003,1,0,0,0,1007,200,1,0,0,0,1008,1012,5,
  	34,0,0,1009,1011,8,1,0,0,1010,1009,1,0,0,0,1011,1014,1,0,0,0,1012,1010,
  	1,0,0,0,1012,1013,1,0,0,0,1013,1015,1,0,0,0,1014,1012,1,0,0,0,1015,1016,
  	5,34,0,0,1016,202,1,0,0,0,1017,1019,5,38,0,0,1018,1020,3,213,106,0,1019,
  	1018,1,0,0,0,1020,1021,1,0,0,0,1021,1019,1,0,0,0,1021,1022,1,0,0,0,1022,
  	204,1,0,0,0,1023,1025,3,149,74,0,1024,1026,7,2,0,0,1025,1024,1,0,0,0,
  	1026,1027,1,0,0,0,1027,1025,1,0,0,0,1027,1028,1,0,0,0,1028,206,1,0,0,
  	0,1029,1031,3,219,109,0,1030,1029,1,0,0,0,1031,1032,1,0,0,0,1032,1030,
  	1,0,0,0,1032,1033,1,0,0,0,1033,1034,1,0,0,0,1034,1036,5,46,0,0,1035,1037,
  	3,219,109,0,1036,1035,1,0,0,0,1037,1038,1,0,0,0,1038,1036,1,0,0,0,1038,
  	1039,1,0,0,0,1039,1048,1,0,0,0,1040,1042,7,3,0,0,1041,1043,7,4,0,0,1042,
  	1041,1,0,0,0,1043,1044,1,0,0,0,1044,1042,1,0,0,0,1044,1045,1,0,0,0,1045,
  	1047,1,0,0,0,1046,1040,1,0,0,0,1047,1050,1,0,0,0,1048,1046,1,0,0,0,1048,
  	1049,1,0,0,0,1049,208,1,0,0,0,1050,1048,1,0,0,0,1051,1053,3,219,109,0,
  	1052,1051,1,0,0,0,1053,1054,1,0,0,0,1054,1052,1,0,0,0,1054,1055,1,0,0,
  	0,1055,210,1,0,0,0,1056,1057,3,215,107,0,1057,212,1,0,0,0,1058,1059,7,
  	5,0,0,1059,214,1,0,0,0,1060,1066,3,217,108,0,1061,1065,3,217,108,0,1062,
  	1065,3,219,109,0,1063,1065,3,151,75,0,1064,1061,1,0,0,0,1064,1062,1,0,
  	0,0,1064,1063,1,0,0,0,1065,1068,1,0,0,0,1066,1064,1,0,0,0,1066,1067,1,
  	0,0,0,1067,1072,1,0,0,0,1068,1066,1,0,0,0,1069,1073,3,149,74,0,1070,1073,
  	3,133,66,0,1071,1073,3,135,67,0,1072,1069,1,0,0,0,1072,1070,1,0,0,0,1072,
  	1071,1,0,0,0,1072,1073,1,0,0,0,1073,216,1,0,0,0,1074,1075,7,6,0,0,1075,
  	218,1,0,0,0,1076,1077,7,4,0,0,1077,220,1,0,0,0,1078,1080,7,7,0,0,1079,
  	1078,1,0,0,0,1080,1081,1,0,0,0,1081,1079,1,0,0,0,1081,1082,1,0,0,0,1082,
  	1083,1,0,0,0,1083,1084,6,110,1,0,1084,222,1,0,0,0,87,0,229,239,244,257,
  	269,279,299,307,315,325,333,341,347,361,371,377,391,411,423,433,447,459,
  	467,481,497,511,521,531,541,552,558,570,580,590,602,614,622,630,638,646,
  	654,662,670,682,690,696,704,710,718,730,738,746,754,762,774,784,792,800,
  	812,822,830,842,850,860,868,880,894,913,964,974,984,992,998,1006,1012,
  	1021,1027,1032,1038,1044,1048,1054,1064,1066,1072,1081,2,6,0,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  dariclexerLexerStaticData = staticData.release();
}

}

DaricLexer::DaricLexer(CharStream *input) : Lexer(input) {
  DaricLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *dariclexerLexerStaticData->atn, dariclexerLexerStaticData->decisionToDFA, dariclexerLexerStaticData->sharedContextCache);
}

DaricLexer::~DaricLexer() {
  delete _interpreter;
}

std::string DaricLexer::getGrammarFileName() const {
  return "Daric.g4";
}

const std::vector<std::string>& DaricLexer::getRuleNames() const {
  return dariclexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& DaricLexer::getChannelNames() const {
  return dariclexerLexerStaticData->channelNames;
}

const std::vector<std::string>& DaricLexer::getModeNames() const {
  return dariclexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& DaricLexer::getVocabulary() const {
  return dariclexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView DaricLexer::getSerializedATN() const {
  return dariclexerLexerStaticData->serializedATN;
}

const atn::ATN& DaricLexer::getATN() const {
  return *dariclexerLexerStaticData->atn;
}




void DaricLexer::initialize() {
  ::antlr4::internal::call_once(dariclexerLexerOnceFlag, dariclexerLexerInitialize);
}
